{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "_td6DnRt7JPB",
        "CP7K52ta0Y4Z",
        "8eARfkyB_Uzw",
        "9ShlwA0mEcUW",
        "NQUqmGVNFj82"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# FINAL PROJECT\n",
        "\n"
      ],
      "metadata": {
        "id": "5xbiCU7myAbW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## STEPS"
      ],
      "metadata": {
        "id": "_td6DnRt7JPB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**1. Goal**\n",
        "\n",
        "   The overarching goal of this project is to employ advanced data analysis techniques to identify factors contributing to a healthy lifestyle.\n",
        "\n",
        "**2. Why This Project?**\n",
        "\n",
        "   This section delves into the importance of the project, highlighting its potential to offer tangible benefits to individuals seeking to enhance their well-being. It aligns the project with broader health and wellness goals, emphasizing the positive impact on quality of life.\n",
        "\n",
        "**3. About Datasets**\n",
        "\n",
        "   A brief overview of the datasets used, including their source, format, and any relevant details. This section sets the stage for the subsequent analysis.\n",
        "\n",
        "**4. Summary of the Columns**\n",
        "\n",
        "   Offer a detailed summary of key variables within the dataset. This serves as a reference for readers to understand the dataset structure.\n",
        "\n",
        "**5. Preprocessing**\n",
        "\n",
        "   Data preprocessing is a vital step in ensuring the accuracy and reliability of the analysis. This section will detail the steps taken to clean and prepare the data for analysis. Common preprocessing techniques, such as handling missing values, addressing outliers, and standardizing data, will be discussed.\n",
        "\n",
        "**6. My Analysis**\n",
        "\n",
        "   This section will present the results of the analysis conducted on the preprocessed data. Include visualizations and statistical findings. Each key insight will be thoroughly explained, and its potential implications for promoting a healthy lifestyle will be discussed.\n",
        "\n",
        "**7. Conclusion**\n",
        "\n",
        "   In the conclusion, we will summarize the key findings of the analysis and their implications. This section will also discuss the project's overall success in achieving its goal and offer suggestions for future research or improvements.\n",
        "\n"
      ],
      "metadata": {
        "id": "7bdlmhE9_J1j"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## GOAL"
      ],
      "metadata": {
        "id": "CP7K52ta0Y4Z"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**The overarching goal of this final project is to leverage advanced data analysis techniques to extract meaningful insights and uncover valuable trends from the dataset. Specifically, the focus will be on identifying factors and patterns that contribute to leading a healthy life. By employing statistical analysis and data visualization, the aim is to generate actionable information that can empower individuals to make informed lifestyle choices and promote overall well-being. The project will not only seek to highlight existing correlations but also strive to provide practical recommendations based on the discovered insights, contributing to a greater understanding of the key elements that lead to a healthy and balanced lifestyle.**"
      ],
      "metadata": {
        "id": "NiO6O6LY1Odp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Why This Project?"
      ],
      "metadata": {
        "id": "8eARfkyB_Uzw"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "The significance of undertaking this project lies in its potential to address critical aspects of public health and individual well-being. Several compelling reasons support the relevance and importance of this endeavor:\n",
        "\n",
        "1. **Public Health Impact:**\n",
        "   - The project directly aligns with broader public health goals by focusing on factors that contribute to a healthy lifestyle. In today's fast-paced world, where sedentary lifestyles and unhealthy habits are prevalent, understanding and promoting a healthier way of living are crucial for disease prevention and overall well-being.\n",
        "\n",
        "2. **Empowering Individuals:**\n",
        "   - By extracting meaningful insights from the data, this project aims to empower individuals to make informed decisions about their lifestyles. The information derived can serve as a guide for adopting healthier habits, ultimately leading to improved quality of life and reduced healthcare burdens.\n",
        "\n",
        "3. **Data-Driven Decision-Making:**\n",
        "   - In an era dominated by data, leveraging advanced analytics to uncover patterns and trends in health-related datasets is essential. This project advocates for the use of data-driven decision-making, encouraging a proactive approach to health management based on empirical evidence.\n",
        "\n",
        "4. **Preventive Health Measures:**\n",
        "   - Understanding the factors associated with a healthy lifestyle can contribute significantly to preventive health measures. By identifying correlations and trends, the project aims to highlight areas where proactive measures can be taken, preventing the onset of health issues before they become more severe.\n",
        "\n",
        "5. **Promoting Holistic Well-Being:**\n",
        "   - The project goes beyond traditional health metrics by exploring a holistic view of well-being. It considers not only physical health but also factors that contribute to mental and emotional well-being, recognizing the interconnected nature of these components.\n",
        "\n",
        "\n",
        "6. **Potential for Lifestyle Interventions:**\n",
        "   - The insights gained from this project have the potential to inform targeted lifestyle interventions. Whether through educational campaigns, policy changes, or personalized health recommendations, the project aims to influence positive behavioral changes that support healthier living.\n",
        "\n",
        "In summary, this project serves as a meaningful contribution to the overarching goal of promoting health and well-being. By combining data analysis with a focus on practical outcomes, it strives to make a positive impact on both individual lives and the broader landscape of public health.\n"
      ],
      "metadata": {
        "id": "hzVRJd1b_V2A"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## About Datasets"
      ],
      "metadata": {
        "id": "9ShlwA0mEcUW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "[Dataset 1](https://www.kaggle.com/datasets/antoniofurioso/diabetes-dataset-sklearn/data), sourced from the owner [Antonio Furioso](https://www.kaggle.com/antoniofurioso), is provided in a text (txt) format.\n",
        "\n",
        "[Dataset 2](https://www.kaggle.com/datasets/titussamuelraj/diabetes), contributed by [Titus Samuel Raj](https://www.kaggle.com/titussamuelraj), is available in Excel (xlsx) format and was sourced from Kaggle.\n",
        "\n",
        "[Dataset 3](https://www.kaggle.com/datasets/iammustafatz/diabetes-prediction-dataset), sourced from [MOHAMMED MUSTAFA](https://www.kaggle.com/iammustafatz), is in CSV format and was also obtained from Kaggle. Notably, this dataset was last updated eight months ago.\n",
        "\n",
        "These datasets form the basis for our analysis, with each dataset offering unique insights and information.\n"
      ],
      "metadata": {
        "id": "j2HemPZMEf76"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Summary of the Columns"
      ],
      "metadata": {
        "id": "NQUqmGVNFj82"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dataset 3:\n",
        "1. **gender:** Gender refers to the classification of individuals as male or female. It is an important demographic factor that can influence various aspects of health and medical conditions.\n",
        "\n",
        "2. **age:** Age represents the number of years a person has lived since birth. It provides insight into the individual's life stage, potential health risks, and susceptibility to certain diseases or conditions associated with specific age groups.\n",
        "\n",
        "3. **hypertension:** Hypertension, often referred to as high blood pressure, is a medical condition characterized by persistently elevated blood pressure in the arteries. It is a significant risk factor for various cardiovascular diseases and can lead to serious health complications if left unmanaged.\n",
        "\n",
        "4. **heart_disease:** Heart disease refers to a range of conditions affecting the heart, such as coronary artery disease, heart failure, or heart rhythm disorders. It is a broad term encompassing various cardiovascular disorders that can impact the overall functioning of the heart.\n",
        "\n",
        "5. **smoking_history:** Smoking history indicates whether an individual has a past or present habit of smoking tobacco products. Smoking is a well-known risk factor for numerous health problems, including respiratory diseases, cardiovascular diseases, and certain types of cancer.\n",
        "\n",
        "6. **bmi:** Body Mass Index (BMI) is a measure of body fat based on an individual's weight and height. It provides an estimation of whether a person's weight is within a healthy range or if they are underweight, overweight, or obese. BMI is commonly used as a screening tool for assessing the risk of weight-related health issues.\n",
        "\n",
        "7. **HbA1c_level:** HbA1c (Hemoglobin A1c) level is a laboratory test that measures the average blood sugar (glucose) levels over the past 2-3 months. It is commonly used in the diagnosis and management of diabetes. Higher HbA1c levels indicate poorer blood sugar control and may indicate the need for adjustments in diabetes treatment.\n",
        "\n",
        "8. **blood_glucose_level:** Blood glucose level refers to the concentration of glucose (sugar) in the bloodstream. It is an important indicator of an individual's blood sugar regulation. Abnormal blood glucose levels, either too high (hyperglycemia) or too low (hypoglycemia), can be associated with various health conditions, particularly diabetes.\n",
        "\n",
        "9. **diabetes:** Diabetes is a chronic medical condition characterized by elevated blood sugar levels due to insufficient insulin production or ineffective use of insulin in the body. It requires careful management and monitoring of blood sugar levels to prevent complications. Diabetes can have significant impacts on overall health and may require lifestyle modifications, medication, and regular medical care.\n",
        "\n",
        "Dataset 2:\n",
        "10. Pregnancies: Number of pregnancies the individual has experienced.\n",
        "11. Glucose: Glucose concentration in the blood measured in mg/dL.\n",
        "12. BloodPressure: Diastolic blood pressure measured in mm Hg.\n",
        "20. SkinThickness: Thickness of skinfold measured in millimeters.\n",
        "21. Insulin: Insulin level measured in mU/mL.\n",
        "22. DiabetesPedigreeFunction: A function that scores the likelihood of diabetes based on family history.\n",
        "\n",
        "Dataset 1:\n",
        "10. **s1:** tc, T-Cells (a type of white blood cells)\n",
        "11. **s2:** ldl, low-density lipoproteins\n",
        "12. **s3:** hdl, high-density lipoproteins\n",
        "13. **s4:** tch, thyroid stimulating hormone\n",
        "14. **s5:** ltg, lamotrigine\n",
        "15. **s6:** glu, blood sugar level\n",
        "16. **y:** response\n",
        "\n"
      ],
      "metadata": {
        "id": "GHYlao00FuDy"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##  Preprocessing"
      ],
      "metadata": {
        "id": "Pr0O9_bl1hxq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Importing\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from tabulate import tabulate"
      ],
      "metadata": {
        "id": "67QcBQGd1mnZ"
      },
      "execution_count": 77,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Functions\n",
        "def print_three_dataframes(df1, df2, df3):\n",
        "    \"\"\"\n",
        "    Print the head of three DataFrames in a tabular format.\n",
        "\n",
        "    Parameters:\n",
        "    - df1, df2, df3 (DataFrame): The three DataFrames to be printed.\n",
        "    \"\"\"\n",
        "    print(\"DataFrame 1:\")\n",
        "    print(tabulate(df1.head(), headers='keys', tablefmt='fancy_grid'))\n",
        "\n",
        "    print(\"\\nDataFrame 2:\")\n",
        "    print(tabulate(df2.head(), headers='keys', tablefmt='fancy_grid'))\n",
        "\n",
        "    print(\"\\nDataFrame 3:\")\n",
        "    print(tabulate(df3.head(), headers='keys', tablefmt='fancy_grid'))\n",
        "\n",
        "def count_unique_values(dataframe):\n",
        "    \"\"\"\n",
        "    Check the number of unique values for columns of type int64 in the given DataFrame.\n",
        "\n",
        "    Parameters:\n",
        "    - dataframe (DataFrame): The DataFrame to be analyzed.\n",
        "\n",
        "    Returns:\n",
        "    - Series: A Series containing the number of unique values for each int64 column.\n",
        "    \"\"\"\n",
        "    return dataframe.select_dtypes(include='int64').nunique()\n",
        "\n",
        "def check_null_values(dataset):\n",
        "    \"\"\"\n",
        "    Print the number of null values for each column in the given dataset.\n",
        "\n",
        "    Parameters:\n",
        "    - dataset (DataFrame): The DataFrame to be analyzed.\n",
        "    \"\"\"\n",
        "\n",
        "    for col in dataset.columns:\n",
        "        print('{} has {} null values'.format(col, dataset[col].isnull().sum()))\n",
        "\n",
        "def normalize_columns(dataframe):\n",
        "    \"\"\"\n",
        "    Normalize the column names in the given DataFrame by converting them to lowercase,\n",
        "    excluding the first letter.\n",
        "\n",
        "    Parameters:\n",
        "    - dataframe (DataFrame): The DataFrame whose columns will be normalized.\n",
        "    \"\"\"\n",
        "\n",
        "    dataframe.columns = [col[:1] + col[1:].lower() for col in dataframe.columns]"
      ],
      "metadata": {
        "id": "Aq24HHed2rLK"
      },
      "execution_count": 78,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Reading an Excel file ('diabetes.xlsx') into a DataFrame (xlsx)\n",
        "xlsx = pd.read_excel('diabetes.xlsx')\n",
        "\n",
        "# Reading a tab-separated text file ('diabetes.tab.txt') into a DataFrame (txt)\n",
        "txt = pd.read_csv('diabetes.tab.txt', delimiter='\\t')\n",
        "\n",
        "# Reading a CSV file ('diabetes_prediction_dataset.csv') into a DataFrame (csv)\n",
        "csv = pd.read_csv('diabetes_prediction_dataset.csv')"
      ],
      "metadata": {
        "id": "RbRSTpa220Js"
      },
      "execution_count": 79,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Calling the function to print three DataFrames: csv, xlsx, and txt\n",
        "print_three_dataframes(csv, xlsx, txt)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "INGu5Fht4OfB",
        "outputId": "717cce10-9b16-4981-d490-ba0cba39e85b"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DataFrame 1:\n",
            "╒════╤══════════╤═══════╤════════════════╤═════════════════╤═══════════════════╤═══════╤═══════════════╤═══════════════════════╤════════════╕\n",
            "│    │ gender   │   age │   hypertension │   heart_disease │ smoking_history   │   bmi │   HbA1c_level │   blood_glucose_level │   diabetes │\n",
            "╞════╪══════════╪═══════╪════════════════╪═════════════════╪═══════════════════╪═══════╪═══════════════╪═══════════════════════╪════════════╡\n",
            "│  0 │ Female   │    80 │              0 │               1 │ never             │ 25.19 │           6.6 │                   140 │          0 │\n",
            "├────┼──────────┼───────┼────────────────┼─────────────────┼───────────────────┼───────┼───────────────┼───────────────────────┼────────────┤\n",
            "│  1 │ Female   │    54 │              0 │               0 │ No Info           │ 27.32 │           6.6 │                    80 │          0 │\n",
            "├────┼──────────┼───────┼────────────────┼─────────────────┼───────────────────┼───────┼───────────────┼───────────────────────┼────────────┤\n",
            "│  2 │ Male     │    28 │              0 │               0 │ never             │ 27.32 │           5.7 │                   158 │          0 │\n",
            "├────┼──────────┼───────┼────────────────┼─────────────────┼───────────────────┼───────┼───────────────┼───────────────────────┼────────────┤\n",
            "│  3 │ Female   │    36 │              0 │               0 │ current           │ 23.45 │           5   │                   155 │          0 │\n",
            "├────┼──────────┼───────┼────────────────┼─────────────────┼───────────────────┼───────┼───────────────┼───────────────────────┼────────────┤\n",
            "│  4 │ Male     │    76 │              1 │               1 │ current           │ 20.14 │           4.8 │                   155 │          0 │\n",
            "╘════╧══════════╧═══════╧════════════════╧═════════════════╧═══════════════════╧═══════╧═══════════════╧═══════════════════════╧════════════╛\n",
            "\n",
            "DataFrame 2:\n",
            "╒════╤═══════════════╤═══════════╤═════════════════╤═════════════════╤═══════════╤═══════╤════════════════════════════╤═══════╤═══════════╕\n",
            "│    │   Pregnancies │   Glucose │   BloodPressure │   SkinThickness │   Insulin │   BMI │   DiabetesPedigreeFunction │   Age │   Outcome │\n",
            "╞════╪═══════════════╪═══════════╪═════════════════╪═════════════════╪═══════════╪═══════╪════════════════════════════╪═══════╪═══════════╡\n",
            "│  0 │             6 │       148 │              72 │              35 │         0 │  33.6 │                      0.627 │    50 │         1 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼───────┼────────────────────────────┼───────┼───────────┤\n",
            "│  1 │             1 │        85 │              66 │              29 │         0 │  26.6 │                      0.351 │    31 │         0 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼───────┼────────────────────────────┼───────┼───────────┤\n",
            "│  2 │             8 │       183 │              64 │               0 │         0 │  23.3 │                      0.672 │    32 │         1 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼───────┼────────────────────────────┼───────┼───────────┤\n",
            "│  3 │             1 │        89 │              66 │              23 │        94 │  28.1 │                      0.167 │    21 │         0 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼───────┼────────────────────────────┼───────┼───────────┤\n",
            "│  4 │             0 │       137 │              40 │              35 │       168 │  43.1 │                      2.288 │    33 │         1 │\n",
            "╘════╧═══════════════╧═══════════╧═════════════════╧═════════════════╧═══════════╧═══════╧════════════════════════════╧═══════╧═══════════╛\n",
            "\n",
            "DataFrame 3:\n",
            "╒════╤═══════╤═══════╤═══════╤══════╤══════╤═══════╤══════╤══════╤════════╤══════╤═════╕\n",
            "│    │   AGE │   SEX │   BMI │   BP │   S1 │    S2 │   S3 │   S4 │     S5 │   S6 │   Y │\n",
            "╞════╪═══════╪═══════╪═══════╪══════╪══════╪═══════╪══════╪══════╪════════╪══════╪═════╡\n",
            "│  0 │    59 │     2 │  32.1 │  101 │  157 │  93.2 │   38 │    4 │ 4.8598 │   87 │ 151 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼──────┼─────┤\n",
            "│  1 │    48 │     1 │  21.6 │   87 │  183 │ 103.2 │   70 │    3 │ 3.8918 │   69 │  75 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼──────┼─────┤\n",
            "│  2 │    72 │     2 │  30.5 │   93 │  156 │  93.6 │   41 │    4 │ 4.6728 │   85 │ 141 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼──────┼─────┤\n",
            "│  3 │    24 │     1 │  25.3 │   84 │  198 │ 131.4 │   40 │    5 │ 4.8903 │   89 │ 206 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼──────┼─────┤\n",
            "│  4 │    50 │     1 │  23   │  101 │  192 │ 125.4 │   52 │    4 │ 4.2905 │   80 │ 135 │\n",
            "╘════╧═══════╧═══════╧═══════╧══════╧══════╧═══════╧══════╧══════╧════════╧══════╧═════╛\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Printing the shape\n",
        "xlsx.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1RrLmIXlHCO8",
        "outputId": "a4b3f060-c8ee-4a81-f27a-1c8f6d83785e"
      },
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(768, 9)"
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "csv.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SSdeOYiiHFRs",
        "outputId": "246c96e7-b0b1-4eab-ad45-835621b8d1f1"
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(100000, 9)"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "txt.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GwaX-5V-HHBD",
        "outputId": "1e56d1af-8498-438e-b4d6-399bf9c3374d"
      },
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(442, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Printing the information about the DataFrame\n",
        "xlsx.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cvePluui5KOv",
        "outputId": "080a9c1b-0cc9-462f-cc4f-808b691f0a76"
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 768 entries, 0 to 767\n",
            "Data columns (total 9 columns):\n",
            " #   Column                    Non-Null Count  Dtype  \n",
            "---  ------                    --------------  -----  \n",
            " 0   Pregnancies               768 non-null    int64  \n",
            " 1   Glucose                   768 non-null    int64  \n",
            " 2   BloodPressure             768 non-null    int64  \n",
            " 3   SkinThickness             768 non-null    int64  \n",
            " 4   Insulin                   768 non-null    int64  \n",
            " 5   BMI                       768 non-null    float64\n",
            " 6   DiabetesPedigreeFunction  768 non-null    float64\n",
            " 7   Age                       768 non-null    int64  \n",
            " 8   Outcome                   768 non-null    int64  \n",
            "dtypes: float64(2), int64(7)\n",
            "memory usage: 54.1 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "txt.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fjidw0w85MEj",
        "outputId": "9247058c-c902-4610-e2b2-83b6c8a38b59"
      },
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 442 entries, 0 to 441\n",
            "Data columns (total 11 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   AGE     442 non-null    int64  \n",
            " 1   SEX     442 non-null    int64  \n",
            " 2   BMI     442 non-null    float64\n",
            " 3   BP      442 non-null    float64\n",
            " 4   S1      442 non-null    int64  \n",
            " 5   S2      442 non-null    float64\n",
            " 6   S3      442 non-null    float64\n",
            " 7   S4      442 non-null    float64\n",
            " 8   S5      442 non-null    float64\n",
            " 9   S6      442 non-null    int64  \n",
            " 10  Y       442 non-null    int64  \n",
            "dtypes: float64(6), int64(5)\n",
            "memory usage: 38.1 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "csv.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6uVOU5oh5OFM",
        "outputId": "3778ae11-1655-4420-d20e-d78a261781ff"
      },
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 100000 entries, 0 to 99999\n",
            "Data columns (total 9 columns):\n",
            " #   Column               Non-Null Count   Dtype  \n",
            "---  ------               --------------   -----  \n",
            " 0   gender               100000 non-null  object \n",
            " 1   age                  100000 non-null  float64\n",
            " 2   hypertension         100000 non-null  int64  \n",
            " 3   heart_disease        100000 non-null  int64  \n",
            " 4   smoking_history      100000 non-null  object \n",
            " 5   bmi                  100000 non-null  float64\n",
            " 6   HbA1c_level          100000 non-null  float64\n",
            " 7   blood_glucose_level  100000 non-null  int64  \n",
            " 8   diabetes             100000 non-null  int64  \n",
            "dtypes: float64(3), int64(4), object(2)\n",
            "memory usage: 6.9+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# basic statistic details about the data (note only numerical columns would be displayed here unless parameter include=\"all\")\n",
        "xlsx.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "I5S2Ufue5VSE",
        "outputId": "805ec98a-3c53-4ebe-8993-f0d3053bd661"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Pregnancies     Glucose  BloodPressure  SkinThickness     Insulin  \\\n",
              "count   768.000000  768.000000     768.000000     768.000000  768.000000   \n",
              "mean      3.845052  120.894531      69.105469      20.536458   79.799479   \n",
              "std       3.369578   31.972618      19.355807      15.952218  115.244002   \n",
              "min       0.000000    0.000000       0.000000       0.000000    0.000000   \n",
              "25%       1.000000   99.000000      62.000000       0.000000    0.000000   \n",
              "50%       3.000000  117.000000      72.000000      23.000000   30.500000   \n",
              "75%       6.000000  140.250000      80.000000      32.000000  127.250000   \n",
              "max      17.000000  199.000000     122.000000      99.000000  846.000000   \n",
              "\n",
              "              BMI  DiabetesPedigreeFunction         Age     Outcome  \n",
              "count  768.000000                768.000000  768.000000  768.000000  \n",
              "mean    31.992578                  0.471876   33.240885    0.348958  \n",
              "std      7.884160                  0.331329   11.760232    0.476951  \n",
              "min      0.000000                  0.078000   21.000000    0.000000  \n",
              "25%     27.300000                  0.243750   24.000000    0.000000  \n",
              "50%     32.000000                  0.372500   29.000000    0.000000  \n",
              "75%     36.600000                  0.626250   41.000000    1.000000  \n",
              "max     67.100000                  2.420000   81.000000    1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3a7891d6-1683-4f0f-92d4-29762c41e847\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Pregnancies</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>BloodPressure</th>\n",
              "      <th>SkinThickness</th>\n",
              "      <th>Insulin</th>\n",
              "      <th>BMI</th>\n",
              "      <th>DiabetesPedigreeFunction</th>\n",
              "      <th>Age</th>\n",
              "      <th>Outcome</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>768.000000</td>\n",
              "      <td>768.000000</td>\n",
              "      <td>768.000000</td>\n",
              "      <td>768.000000</td>\n",
              "      <td>768.000000</td>\n",
              "      <td>768.000000</td>\n",
              "      <td>768.000000</td>\n",
              "      <td>768.000000</td>\n",
              "      <td>768.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.845052</td>\n",
              "      <td>120.894531</td>\n",
              "      <td>69.105469</td>\n",
              "      <td>20.536458</td>\n",
              "      <td>79.799479</td>\n",
              "      <td>31.992578</td>\n",
              "      <td>0.471876</td>\n",
              "      <td>33.240885</td>\n",
              "      <td>0.348958</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.369578</td>\n",
              "      <td>31.972618</td>\n",
              "      <td>19.355807</td>\n",
              "      <td>15.952218</td>\n",
              "      <td>115.244002</td>\n",
              "      <td>7.884160</td>\n",
              "      <td>0.331329</td>\n",
              "      <td>11.760232</td>\n",
              "      <td>0.476951</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.078000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>99.000000</td>\n",
              "      <td>62.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>27.300000</td>\n",
              "      <td>0.243750</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.000000</td>\n",
              "      <td>117.000000</td>\n",
              "      <td>72.000000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>30.500000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>0.372500</td>\n",
              "      <td>29.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.000000</td>\n",
              "      <td>140.250000</td>\n",
              "      <td>80.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>127.250000</td>\n",
              "      <td>36.600000</td>\n",
              "      <td>0.626250</td>\n",
              "      <td>41.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>17.000000</td>\n",
              "      <td>199.000000</td>\n",
              "      <td>122.000000</td>\n",
              "      <td>99.000000</td>\n",
              "      <td>846.000000</td>\n",
              "      <td>67.100000</td>\n",
              "      <td>2.420000</td>\n",
              "      <td>81.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a7891d6-1683-4f0f-92d4-29762c41e847')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3a7891d6-1683-4f0f-92d4-29762c41e847 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3a7891d6-1683-4f0f-92d4-29762c41e847');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-621de124-4171-404d-a4b8-9d97cd1d7258\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-621de124-4171-404d-a4b8-9d97cd1d7258')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-621de124-4171-404d-a4b8-9d97cd1d7258 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "txt.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "uFbPLvFD5eXz",
        "outputId": "91f07643-0367-4a97-ada4-0602ea3ee9b5"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              AGE         SEX         BMI          BP          S1          S2  \\\n",
              "count  442.000000  442.000000  442.000000  442.000000  442.000000  442.000000   \n",
              "mean    48.518100    1.468326   26.375792   94.647014  189.140271  115.439140   \n",
              "std     13.109028    0.499561    4.418122   13.831283   34.608052   30.413081   \n",
              "min     19.000000    1.000000   18.000000   62.000000   97.000000   41.600000   \n",
              "25%     38.250000    1.000000   23.200000   84.000000  164.250000   96.050000   \n",
              "50%     50.000000    1.000000   25.700000   93.000000  186.000000  113.000000   \n",
              "75%     59.000000    2.000000   29.275000  105.000000  209.750000  134.500000   \n",
              "max     79.000000    2.000000   42.200000  133.000000  301.000000  242.400000   \n",
              "\n",
              "               S3          S4          S5          S6           Y  \n",
              "count  442.000000  442.000000  442.000000  442.000000  442.000000  \n",
              "mean    49.788462    4.070249    4.641411   91.260181  152.133484  \n",
              "std     12.934202    1.290450    0.522391   11.496335   77.093005  \n",
              "min     22.000000    2.000000    3.258100   58.000000   25.000000  \n",
              "25%     40.250000    3.000000    4.276700   83.250000   87.000000  \n",
              "50%     48.000000    4.000000    4.620050   91.000000  140.500000  \n",
              "75%     57.750000    5.000000    4.997200   98.000000  211.500000  \n",
              "max     99.000000    9.090000    6.107000  124.000000  346.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6c988687-ebb7-47b1-930e-72932a653b4f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AGE</th>\n",
              "      <th>SEX</th>\n",
              "      <th>BMI</th>\n",
              "      <th>BP</th>\n",
              "      <th>S1</th>\n",
              "      <th>S2</th>\n",
              "      <th>S3</th>\n",
              "      <th>S4</th>\n",
              "      <th>S5</th>\n",
              "      <th>S6</th>\n",
              "      <th>Y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "      <td>442.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>48.518100</td>\n",
              "      <td>1.468326</td>\n",
              "      <td>26.375792</td>\n",
              "      <td>94.647014</td>\n",
              "      <td>189.140271</td>\n",
              "      <td>115.439140</td>\n",
              "      <td>49.788462</td>\n",
              "      <td>4.070249</td>\n",
              "      <td>4.641411</td>\n",
              "      <td>91.260181</td>\n",
              "      <td>152.133484</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>13.109028</td>\n",
              "      <td>0.499561</td>\n",
              "      <td>4.418122</td>\n",
              "      <td>13.831283</td>\n",
              "      <td>34.608052</td>\n",
              "      <td>30.413081</td>\n",
              "      <td>12.934202</td>\n",
              "      <td>1.290450</td>\n",
              "      <td>0.522391</td>\n",
              "      <td>11.496335</td>\n",
              "      <td>77.093005</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>19.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>62.000000</td>\n",
              "      <td>97.000000</td>\n",
              "      <td>41.600000</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>3.258100</td>\n",
              "      <td>58.000000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>38.250000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>23.200000</td>\n",
              "      <td>84.000000</td>\n",
              "      <td>164.250000</td>\n",
              "      <td>96.050000</td>\n",
              "      <td>40.250000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>4.276700</td>\n",
              "      <td>83.250000</td>\n",
              "      <td>87.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>50.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>25.700000</td>\n",
              "      <td>93.000000</td>\n",
              "      <td>186.000000</td>\n",
              "      <td>113.000000</td>\n",
              "      <td>48.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>4.620050</td>\n",
              "      <td>91.000000</td>\n",
              "      <td>140.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>59.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>29.275000</td>\n",
              "      <td>105.000000</td>\n",
              "      <td>209.750000</td>\n",
              "      <td>134.500000</td>\n",
              "      <td>57.750000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>4.997200</td>\n",
              "      <td>98.000000</td>\n",
              "      <td>211.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>79.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>42.200000</td>\n",
              "      <td>133.000000</td>\n",
              "      <td>301.000000</td>\n",
              "      <td>242.400000</td>\n",
              "      <td>99.000000</td>\n",
              "      <td>9.090000</td>\n",
              "      <td>6.107000</td>\n",
              "      <td>124.000000</td>\n",
              "      <td>346.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c988687-ebb7-47b1-930e-72932a653b4f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6c988687-ebb7-47b1-930e-72932a653b4f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6c988687-ebb7-47b1-930e-72932a653b4f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-68fef1fc-b908-43ed-a590-7680b381147c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68fef1fc-b908-43ed-a590-7680b381147c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-68fef1fc-b908-43ed-a590-7680b381147c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "csv.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "gN9yUfH45jWv",
        "outputId": "8f24c9fe-1c66-4276-a217-5d7014b7d6eb"
      },
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 age  hypertension  heart_disease            bmi  \\\n",
              "count  100000.000000  100000.00000  100000.000000  100000.000000   \n",
              "mean       41.885856       0.07485       0.039420      27.320767   \n",
              "std        22.516840       0.26315       0.194593       6.636783   \n",
              "min         0.080000       0.00000       0.000000      10.010000   \n",
              "25%        24.000000       0.00000       0.000000      23.630000   \n",
              "50%        43.000000       0.00000       0.000000      27.320000   \n",
              "75%        60.000000       0.00000       0.000000      29.580000   \n",
              "max        80.000000       1.00000       1.000000      95.690000   \n",
              "\n",
              "         HbA1c_level  blood_glucose_level       diabetes  \n",
              "count  100000.000000        100000.000000  100000.000000  \n",
              "mean        5.527507           138.058060       0.085000  \n",
              "std         1.070672            40.708136       0.278883  \n",
              "min         3.500000            80.000000       0.000000  \n",
              "25%         4.800000           100.000000       0.000000  \n",
              "50%         5.800000           140.000000       0.000000  \n",
              "75%         6.200000           159.000000       0.000000  \n",
              "max         9.000000           300.000000       1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c4997020-a8b5-4916-9bc3-aa852a85f726\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>hypertension</th>\n",
              "      <th>heart_disease</th>\n",
              "      <th>bmi</th>\n",
              "      <th>HbA1c_level</th>\n",
              "      <th>blood_glucose_level</th>\n",
              "      <th>diabetes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>100000.000000</td>\n",
              "      <td>100000.00000</td>\n",
              "      <td>100000.000000</td>\n",
              "      <td>100000.000000</td>\n",
              "      <td>100000.000000</td>\n",
              "      <td>100000.000000</td>\n",
              "      <td>100000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>41.885856</td>\n",
              "      <td>0.07485</td>\n",
              "      <td>0.039420</td>\n",
              "      <td>27.320767</td>\n",
              "      <td>5.527507</td>\n",
              "      <td>138.058060</td>\n",
              "      <td>0.085000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>22.516840</td>\n",
              "      <td>0.26315</td>\n",
              "      <td>0.194593</td>\n",
              "      <td>6.636783</td>\n",
              "      <td>1.070672</td>\n",
              "      <td>40.708136</td>\n",
              "      <td>0.278883</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.080000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>10.010000</td>\n",
              "      <td>3.500000</td>\n",
              "      <td>80.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>24.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>23.630000</td>\n",
              "      <td>4.800000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>43.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>27.320000</td>\n",
              "      <td>5.800000</td>\n",
              "      <td>140.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>60.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>29.580000</td>\n",
              "      <td>6.200000</td>\n",
              "      <td>159.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>80.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>95.690000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>300.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4997020-a8b5-4916-9bc3-aa852a85f726')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c4997020-a8b5-4916-9bc3-aa852a85f726 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c4997020-a8b5-4916-9bc3-aa852a85f726');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7cc57dbd-527a-4c7f-a67d-3eef29701c48\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7cc57dbd-527a-4c7f-a67d-3eef29701c48')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7cc57dbd-527a-4c7f-a67d-3eef29701c48 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Removing duplicate rows\n",
        "xlsx.drop_duplicates(inplace=True)\n",
        "csv.drop_duplicates(inplace=True)\n",
        "txt.drop_duplicates(inplace=True)\n",
        "\n",
        "# Printing the number of duplicated rows\n",
        "print(xlsx.duplicated().sum())\n",
        "print(txt.duplicated().sum())\n",
        "print(csv.duplicated().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mgx4DYp14hlC",
        "outputId": "deb680e0-c0bf-42ad-efcb-92c7dd0e0dfc"
      },
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0\n",
            "0\n",
            "0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calling the previously defined function to check null values\n",
        "check_null_values(xlsx)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NfgAgpPy4lrM",
        "outputId": "94957bba-074f-40f8-a8d8-7bdaa98b59ae"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pregnancies has 0 null values\n",
            "Glucose has 0 null values\n",
            "BloodPressure has 0 null values\n",
            "SkinThickness has 0 null values\n",
            "Insulin has 0 null values\n",
            "BMI has 0 null values\n",
            "DiabetesPedigreeFunction has 0 null values\n",
            "Age has 0 null values\n",
            "Outcome has 0 null values\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "check_null_values(csv)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mk-81gjZ51YM",
        "outputId": "0ab766b0-3a0e-4a75-a380-498823e7941e"
      },
      "execution_count": 92,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "gender has 0 null values\n",
            "age has 0 null values\n",
            "hypertension has 0 null values\n",
            "heart_disease has 0 null values\n",
            "smoking_history has 0 null values\n",
            "bmi has 0 null values\n",
            "HbA1c_level has 0 null values\n",
            "blood_glucose_level has 0 null values\n",
            "diabetes has 0 null values\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "check_null_values(txt)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dxjqkxtu55H6",
        "outputId": "7619dfa4-33be-4e73-98c4-311f80d5521e"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AGE has 0 null values\n",
            "SEX has 0 null values\n",
            "BMI has 0 null values\n",
            "BP has 0 null values\n",
            "S1 has 0 null values\n",
            "S2 has 0 null values\n",
            "S3 has 0 null values\n",
            "S4 has 0 null values\n",
            "S5 has 0 null values\n",
            "S6 has 0 null values\n",
            "Y has 0 null values\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Describing the object columns in the csv DataFrame\n",
        "csv.describe(include='object')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "AzUD0TlA8TZm",
        "outputId": "b7bba106-0fa2-491f-f7e9-4d8e671befaf"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        gender smoking_history\n",
              "count    96146           96146\n",
              "unique       3               6\n",
              "top     Female           never\n",
              "freq     56161           34398"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-93eed161-851c-481b-a84f-1403067144b7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>gender</th>\n",
              "      <th>smoking_history</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>96146</td>\n",
              "      <td>96146</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>unique</th>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>top</th>\n",
              "      <td>Female</td>\n",
              "      <td>never</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freq</th>\n",
              "      <td>56161</td>\n",
              "      <td>34398</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93eed161-851c-481b-a84f-1403067144b7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-93eed161-851c-481b-a84f-1403067144b7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-93eed161-851c-481b-a84f-1403067144b7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9b9ebf71-b284-48ec-894b-d163d7ef9f9f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b9ebf71-b284-48ec-894b-d163d7ef9f9f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9b9ebf71-b284-48ec-894b-d163d7ef9f9f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calling the previously defined function to count unique int values in each column of the sDataFrame\n",
        "count_unique_values(csv)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ofKu62CWI5RZ",
        "outputId": "d4d8b2c5-27d3-470e-c05b-d5d97353e605"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "hypertension            2\n",
              "heart_disease           2\n",
              "blood_glucose_level    18\n",
              "diabetes                2\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "count_unique_values(xlsx)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H0pikE7kI_zW",
        "outputId": "e3ff865c-5c48-413f-c63b-239c64e38047"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Pregnancies       17\n",
              "Glucose          136\n",
              "BloodPressure     47\n",
              "SkinThickness     51\n",
              "Insulin          186\n",
              "Age               52\n",
              "Outcome            2\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "count_unique_values(txt)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ow6NQMMXJCFd",
        "outputId": "98264e14-a324-42b2-da8b-dab76476794a"
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "AGE     58\n",
              "SEX      2\n",
              "S1     141\n",
              "S6      56\n",
              "Y      214\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Initializing empty lists to store numeric and non-numeric column names for csv DataFrame\n",
        "num_col_csv = []\n",
        "non_num_col_csv = []\n",
        "\n",
        "# Iterating through columns in csv DataFrame\n",
        "for column in csv.columns:\n",
        "    # Checking if the column is numeric\n",
        "    if pd.api.types.is_numeric_dtype(csv[column]):\n",
        "        # Checking if the numeric column has less than 2 unique values (considered non-numeric)\n",
        "        if csv[column].nunique() < 2:\n",
        "            non_num_col_csv.append(column)\n",
        "        else:\n",
        "            num_col_csv.append(column)\n",
        "    # If the column is non-numeric\n",
        "    else:\n",
        "        non_num_col_csv.append(column)\n"
      ],
      "metadata": {
        "id": "3YSDV4Rs8V5h"
      },
      "execution_count": 98,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(num_col_csv)\n",
        "print(non_num_col_csv)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FbKxMhAw880y",
        "outputId": "bf889d24-4922-4f54-f031-ef25e628f892"
      },
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['age', 'hypertension', 'heart_disease', 'bmi', 'HbA1c_level', 'blood_glucose_level', 'diabetes']\n",
            "['gender', 'smoking_history']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calling the previously defined function to normalize columns\n",
        "# This makes by converting them to lowercase, excluding the first letter.\n",
        "normalize_columns(csv)\n",
        "normalize_columns(txt)\n",
        "normalize_columns(xlsx)"
      ],
      "metadata": {
        "id": "hENDM9gM9kvT"
      },
      "execution_count": 100,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print_three_dataframes(csv, xlsx, txt)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uJGhvDd-_C2v",
        "outputId": "8e99cbe1-153d-4be3-85a7-6f2b819f9b8e"
      },
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DataFrame 1:\n",
            "╒════╤══════════╤═══════╤════════════════╤═════════════════╤═══════════════════╤═══════╤═══════════════╤═══════════════════════╤════════════╕\n",
            "│    │ gender   │   age │   hypertension │   heart_disease │ smoking_history   │   bmi │   Hba1c_level │   blood_glucose_level │   diabetes │\n",
            "╞════╪══════════╪═══════╪════════════════╪═════════════════╪═══════════════════╪═══════╪═══════════════╪═══════════════════════╪════════════╡\n",
            "│  0 │ Female   │    80 │              0 │               1 │ never             │ 25.19 │           6.6 │                   140 │          0 │\n",
            "├────┼──────────┼───────┼────────────────┼─────────────────┼───────────────────┼───────┼───────────────┼───────────────────────┼────────────┤\n",
            "│  1 │ Female   │    54 │              0 │               0 │ No Info           │ 27.32 │           6.6 │                    80 │          0 │\n",
            "├────┼──────────┼───────┼────────────────┼─────────────────┼───────────────────┼───────┼───────────────┼───────────────────────┼────────────┤\n",
            "│  2 │ Male     │    28 │              0 │               0 │ never             │ 27.32 │           5.7 │                   158 │          0 │\n",
            "├────┼──────────┼───────┼────────────────┼─────────────────┼───────────────────┼───────┼───────────────┼───────────────────────┼────────────┤\n",
            "│  3 │ Female   │    36 │              0 │               0 │ current           │ 23.45 │           5   │                   155 │          0 │\n",
            "├────┼──────────┼───────┼────────────────┼─────────────────┼───────────────────┼───────┼───────────────┼───────────────────────┼────────────┤\n",
            "│  4 │ Male     │    76 │              1 │               1 │ current           │ 20.14 │           4.8 │                   155 │          0 │\n",
            "╘════╧══════════╧═══════╧════════════════╧═════════════════╧═══════════════════╧═══════╧═══════════════╧═══════════════════════╧════════════╛\n",
            "\n",
            "DataFrame 2:\n",
            "╒════╤═══════════════╤═══════════╤═════════════════╤═════════════════╤═══════════╤═══════╤════════════════════════════╤═══════╤═══════════╕\n",
            "│    │   Pregnancies │   Glucose │   Bloodpressure │   Skinthickness │   Insulin │   Bmi │   Diabetespedigreefunction │   Age │   Outcome │\n",
            "╞════╪═══════════════╪═══════════╪═════════════════╪═════════════════╪═══════════╪═══════╪════════════════════════════╪═══════╪═══════════╡\n",
            "│  0 │             6 │       148 │              72 │              35 │         0 │  33.6 │                      0.627 │    50 │         1 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼───────┼────────────────────────────┼───────┼───────────┤\n",
            "│  1 │             1 │        85 │              66 │              29 │         0 │  26.6 │                      0.351 │    31 │         0 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼───────┼────────────────────────────┼───────┼───────────┤\n",
            "│  2 │             8 │       183 │              64 │               0 │         0 │  23.3 │                      0.672 │    32 │         1 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼───────┼────────────────────────────┼───────┼───────────┤\n",
            "│  3 │             1 │        89 │              66 │              23 │        94 │  28.1 │                      0.167 │    21 │         0 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼───────┼────────────────────────────┼───────┼───────────┤\n",
            "│  4 │             0 │       137 │              40 │              35 │       168 │  43.1 │                      2.288 │    33 │         1 │\n",
            "╘════╧═══════════════╧═══════════╧═════════════════╧═════════════════╧═══════════╧═══════╧════════════════════════════╧═══════╧═══════════╛\n",
            "\n",
            "DataFrame 3:\n",
            "╒════╤═══════╤═══════╤═══════╤══════╤══════╤═══════╤══════╤══════╤════════╤══════╤═════╕\n",
            "│    │   Age │   Sex │   Bmi │   Bp │   S1 │    S2 │   S3 │   S4 │     S5 │   S6 │   Y │\n",
            "╞════╪═══════╪═══════╪═══════╪══════╪══════╪═══════╪══════╪══════╪════════╪══════╪═════╡\n",
            "│  0 │    59 │     2 │  32.1 │  101 │  157 │  93.2 │   38 │    4 │ 4.8598 │   87 │ 151 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼──────┼─────┤\n",
            "│  1 │    48 │     1 │  21.6 │   87 │  183 │ 103.2 │   70 │    3 │ 3.8918 │   69 │  75 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼──────┼─────┤\n",
            "│  2 │    72 │     2 │  30.5 │   93 │  156 │  93.6 │   41 │    4 │ 4.6728 │   85 │ 141 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼──────┼─────┤\n",
            "│  3 │    24 │     1 │  25.3 │   84 │  198 │ 131.4 │   40 │    5 │ 4.8903 │   89 │ 206 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼──────┼─────┤\n",
            "│  4 │    50 │     1 │  23   │  101 │  192 │ 125.4 │   52 │    4 │ 4.2905 │   80 │ 135 │\n",
            "╘════╧═══════╧═══════╧═══════╧══════╧══════╧═══════╧══════╧══════╧════════╧══════╧═════╛\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Renaming columns\n",
        "txt.rename(columns={'S6': 'Glucose'}, inplace=True)\n",
        "csv.rename(columns={'age': 'Age'}, inplace=True)\n",
        "csv.rename(columns={'bmi': 'bmi_x'}, inplace=True)\n",
        "csv.rename(columns={'blood_glucose_level': 'Glucose'}, inplace=True)\n",
        "csv.rename(columns={'diabetes': 'Outcome'}, inplace=True)\n",
        "csv.rename(columns={'gender': 'Sex'}, inplace=True)\n",
        "xlsx.rename(columns={'Bmi': 'bmi_y'}, inplace=True)\n",
        "csv.rename(columns={'Glucose': 'glucose'}, inplace=True)"
      ],
      "metadata": {
        "id": "9yIllSvW_c7i"
      },
      "execution_count": 102,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print_three_dataframes(csv, xlsx, txt)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u47CZIE8Ev-s",
        "outputId": "177cff25-18a2-48a4-cc64-a93f0e2c8dde"
      },
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DataFrame 1:\n",
            "╒════╤════════╤═══════╤════════════════╤═════════════════╤═══════════════════╤═════════╤═══════════════╤═══════════╤═══════════╕\n",
            "│    │ Sex    │   Age │   hypertension │   heart_disease │ smoking_history   │   bmi_x │   Hba1c_level │   glucose │   Outcome │\n",
            "╞════╪════════╪═══════╪════════════════╪═════════════════╪═══════════════════╪═════════╪═══════════════╪═══════════╪═══════════╡\n",
            "│  0 │ Female │    80 │              0 │               1 │ never             │   25.19 │           6.6 │       140 │         0 │\n",
            "├────┼────────┼───────┼────────────────┼─────────────────┼───────────────────┼─────────┼───────────────┼───────────┼───────────┤\n",
            "│  1 │ Female │    54 │              0 │               0 │ No Info           │   27.32 │           6.6 │        80 │         0 │\n",
            "├────┼────────┼───────┼────────────────┼─────────────────┼───────────────────┼─────────┼───────────────┼───────────┼───────────┤\n",
            "│  2 │ Male   │    28 │              0 │               0 │ never             │   27.32 │           5.7 │       158 │         0 │\n",
            "├────┼────────┼───────┼────────────────┼─────────────────┼───────────────────┼─────────┼───────────────┼───────────┼───────────┤\n",
            "│  3 │ Female │    36 │              0 │               0 │ current           │   23.45 │           5   │       155 │         0 │\n",
            "├────┼────────┼───────┼────────────────┼─────────────────┼───────────────────┼─────────┼───────────────┼───────────┼───────────┤\n",
            "│  4 │ Male   │    76 │              1 │               1 │ current           │   20.14 │           4.8 │       155 │         0 │\n",
            "╘════╧════════╧═══════╧════════════════╧═════════════════╧═══════════════════╧═════════╧═══════════════╧═══════════╧═══════════╛\n",
            "\n",
            "DataFrame 2:\n",
            "╒════╤═══════════════╤═══════════╤═════════════════╤═════════════════╤═══════════╤═════════╤════════════════════════════╤═══════╤═══════════╕\n",
            "│    │   Pregnancies │   Glucose │   Bloodpressure │   Skinthickness │   Insulin │   bmi_y │   Diabetespedigreefunction │   Age │   Outcome │\n",
            "╞════╪═══════════════╪═══════════╪═════════════════╪═════════════════╪═══════════╪═════════╪════════════════════════════╪═══════╪═══════════╡\n",
            "│  0 │             6 │       148 │              72 │              35 │         0 │    33.6 │                      0.627 │    50 │         1 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼─────────┼────────────────────────────┼───────┼───────────┤\n",
            "│  1 │             1 │        85 │              66 │              29 │         0 │    26.6 │                      0.351 │    31 │         0 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼─────────┼────────────────────────────┼───────┼───────────┤\n",
            "│  2 │             8 │       183 │              64 │               0 │         0 │    23.3 │                      0.672 │    32 │         1 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼─────────┼────────────────────────────┼───────┼───────────┤\n",
            "│  3 │             1 │        89 │              66 │              23 │        94 │    28.1 │                      0.167 │    21 │         0 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼─────────┼────────────────────────────┼───────┼───────────┤\n",
            "│  4 │             0 │       137 │              40 │              35 │       168 │    43.1 │                      2.288 │    33 │         1 │\n",
            "╘════╧═══════════════╧═══════════╧═════════════════╧═════════════════╧═══════════╧═════════╧════════════════════════════╧═══════╧═══════════╛\n",
            "\n",
            "DataFrame 3:\n",
            "╒════╤═══════╤═══════╤═══════╤══════╤══════╤═══════╤══════╤══════╤════════╤═══════════╤═════╕\n",
            "│    │   Age │   Sex │   Bmi │   Bp │   S1 │    S2 │   S3 │   S4 │     S5 │   Glucose │   Y │\n",
            "╞════╪═══════╪═══════╪═══════╪══════╪══════╪═══════╪══════╪══════╪════════╪═══════════╪═════╡\n",
            "│  0 │    59 │     2 │  32.1 │  101 │  157 │  93.2 │   38 │    4 │ 4.8598 │        87 │ 151 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼───────────┼─────┤\n",
            "│  1 │    48 │     1 │  21.6 │   87 │  183 │ 103.2 │   70 │    3 │ 3.8918 │        69 │  75 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼───────────┼─────┤\n",
            "│  2 │    72 │     2 │  30.5 │   93 │  156 │  93.6 │   41 │    4 │ 4.6728 │        85 │ 141 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼───────────┼─────┤\n",
            "│  3 │    24 │     1 │  25.3 │   84 │  198 │ 131.4 │   40 │    5 │ 4.8903 │        89 │ 206 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼───────────┼─────┤\n",
            "│  4 │    50 │     1 │  23   │  101 │  192 │ 125.4 │   52 │    4 │ 4.2905 │        80 │ 135 │\n",
            "╘════╧═══════╧═══════╧═══════╧══════╧══════╧═══════╧══════╧══════╧════════╧═══════════╧═════╛\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "txt['Sex'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jQqB9xtJE_uP",
        "outputId": "3202da79-1285-430d-a00d-a9519bd1f2d2"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2, 1])"
            ]
          },
          "metadata": {},
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "csv['Sex'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gMgwR5GaFQyh",
        "outputId": "5cb092da-05bc-40e6-b410-0141561a87c7"
      },
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Female', 'Male', 'Other'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Mapping values in the 'Sex' column\n",
        "sex_mapping = {'Female': 0, 'Male': 1, 'Other': 2}\n",
        "csv['Sex'] = csv['Sex'].map(sex_mapping)"
      ],
      "metadata": {
        "id": "CzZ1xksjFwcX"
      },
      "execution_count": 106,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sex_mapping = {1: 0, 2: 1}\n",
        "txt['Sex'] = txt['Sex'].map(sex_mapping)"
      ],
      "metadata": {
        "id": "ascXncAkF-3Y"
      },
      "execution_count": 107,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print_three_dataframes(csv, xlsx, txt)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UXVVpxRLGHuJ",
        "outputId": "54f3de58-8ab6-4192-d7b4-85a428386b85"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DataFrame 1:\n",
            "╒════╤═══════╤═══════╤════════════════╤═════════════════╤═══════════════════╤═════════╤═══════════════╤═══════════╤═══════════╕\n",
            "│    │   Sex │   Age │   hypertension │   heart_disease │ smoking_history   │   bmi_x │   Hba1c_level │   glucose │   Outcome │\n",
            "╞════╪═══════╪═══════╪════════════════╪═════════════════╪═══════════════════╪═════════╪═══════════════╪═══════════╪═══════════╡\n",
            "│  0 │     0 │    80 │              0 │               1 │ never             │   25.19 │           6.6 │       140 │         0 │\n",
            "├────┼───────┼───────┼────────────────┼─────────────────┼───────────────────┼─────────┼───────────────┼───────────┼───────────┤\n",
            "│  1 │     0 │    54 │              0 │               0 │ No Info           │   27.32 │           6.6 │        80 │         0 │\n",
            "├────┼───────┼───────┼────────────────┼─────────────────┼───────────────────┼─────────┼───────────────┼───────────┼───────────┤\n",
            "│  2 │     1 │    28 │              0 │               0 │ never             │   27.32 │           5.7 │       158 │         0 │\n",
            "├────┼───────┼───────┼────────────────┼─────────────────┼───────────────────┼─────────┼───────────────┼───────────┼───────────┤\n",
            "│  3 │     0 │    36 │              0 │               0 │ current           │   23.45 │           5   │       155 │         0 │\n",
            "├────┼───────┼───────┼────────────────┼─────────────────┼───────────────────┼─────────┼───────────────┼───────────┼───────────┤\n",
            "│  4 │     1 │    76 │              1 │               1 │ current           │   20.14 │           4.8 │       155 │         0 │\n",
            "╘════╧═══════╧═══════╧════════════════╧═════════════════╧═══════════════════╧═════════╧═══════════════╧═══════════╧═══════════╛\n",
            "\n",
            "DataFrame 2:\n",
            "╒════╤═══════════════╤═══════════╤═════════════════╤═════════════════╤═══════════╤═════════╤════════════════════════════╤═══════╤═══════════╕\n",
            "│    │   Pregnancies │   Glucose │   Bloodpressure │   Skinthickness │   Insulin │   bmi_y │   Diabetespedigreefunction │   Age │   Outcome │\n",
            "╞════╪═══════════════╪═══════════╪═════════════════╪═════════════════╪═══════════╪═════════╪════════════════════════════╪═══════╪═══════════╡\n",
            "│  0 │             6 │       148 │              72 │              35 │         0 │    33.6 │                      0.627 │    50 │         1 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼─────────┼────────────────────────────┼───────┼───────────┤\n",
            "│  1 │             1 │        85 │              66 │              29 │         0 │    26.6 │                      0.351 │    31 │         0 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼─────────┼────────────────────────────┼───────┼───────────┤\n",
            "│  2 │             8 │       183 │              64 │               0 │         0 │    23.3 │                      0.672 │    32 │         1 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼─────────┼────────────────────────────┼───────┼───────────┤\n",
            "│  3 │             1 │        89 │              66 │              23 │        94 │    28.1 │                      0.167 │    21 │         0 │\n",
            "├────┼───────────────┼───────────┼─────────────────┼─────────────────┼───────────┼─────────┼────────────────────────────┼───────┼───────────┤\n",
            "│  4 │             0 │       137 │              40 │              35 │       168 │    43.1 │                      2.288 │    33 │         1 │\n",
            "╘════╧═══════════════╧═══════════╧═════════════════╧═════════════════╧═══════════╧═════════╧════════════════════════════╧═══════╧═══════════╛\n",
            "\n",
            "DataFrame 3:\n",
            "╒════╤═══════╤═══════╤═══════╤══════╤══════╤═══════╤══════╤══════╤════════╤═══════════╤═════╕\n",
            "│    │   Age │   Sex │   Bmi │   Bp │   S1 │    S2 │   S3 │   S4 │     S5 │   Glucose │   Y │\n",
            "╞════╪═══════╪═══════╪═══════╪══════╪══════╪═══════╪══════╪══════╪════════╪═══════════╪═════╡\n",
            "│  0 │    59 │     1 │  32.1 │  101 │  157 │  93.2 │   38 │    4 │ 4.8598 │        87 │ 151 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼───────────┼─────┤\n",
            "│  1 │    48 │     0 │  21.6 │   87 │  183 │ 103.2 │   70 │    3 │ 3.8918 │        69 │  75 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼───────────┼─────┤\n",
            "│  2 │    72 │     1 │  30.5 │   93 │  156 │  93.6 │   41 │    4 │ 4.6728 │        85 │ 141 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼───────────┼─────┤\n",
            "│  3 │    24 │     0 │  25.3 │   84 │  198 │ 131.4 │   40 │    5 │ 4.8903 │        89 │ 206 │\n",
            "├────┼───────┼───────┼───────┼──────┼──────┼───────┼──────┼──────┼────────┼───────────┼─────┤\n",
            "│  4 │    50 │     0 │  23   │  101 │  192 │ 125.4 │   52 │    4 │ 4.2905 │        80 │ 135 │\n",
            "╘════╧═══════╧═══════╧═══════╧══════╧══════╧═══════╧══════╧══════╧════════╧═══════════╧═════╛\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "txt_c = txt.columns.tolist()\n",
        "csv_c = csv.columns.tolist()\n",
        "xlsx_c = xlsx.columns.tolist()"
      ],
      "metadata": {
        "id": "1jMwE0ByJMKi"
      },
      "execution_count": 109,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Common columns\n",
        "commons = set(txt_c) & set(xlsx_c)\n",
        "commons = list(commons)\n",
        "commons"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VqBk7hf2KDIH",
        "outputId": "c8a37401-234a-4391-af09-f427a59d0227"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Glucose', 'Age']"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Check data types for the specified columns\n",
        "txt[commons].dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MRYw7yuQNF5U",
        "outputId": "047dd02c-d1e3-4a1c-c48f-750c2a922e9f"
      },
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Glucose    int64\n",
              "Age        int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "xlsx[commons].dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hsnLwp82M534",
        "outputId": "d5f49c20-8bba-42f9-b8a6-b25c19b3defa"
      },
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Glucose    int64\n",
              "Age        int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Merging txt and xlsx DataFrames on common columns using inner join\n",
        "df1 = pd.merge(txt, xlsx, on=commons, how='inner')"
      ],
      "metadata": {
        "id": "ZDrQJ3uILdlU"
      },
      "execution_count": 113,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df1.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AubFDZqkMP6S",
        "outputId": "94708b65-17fd-4306-e510-32eefdca15ae"
      },
      "execution_count": 114,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(44, 18)"
            ]
          },
          "metadata": {},
          "execution_count": 114
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1_c = df1.columns.tolist()"
      ],
      "metadata": {
        "id": "rqagzS78Zvkh"
      },
      "execution_count": 115,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "commons1 = set(df1_c) & set(csv_c)\n",
        "commons1 = list(commons1)\n",
        "commons1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-LCd2iv4ZqTz",
        "outputId": "052c01f7-ab52-4587-a948-920fa552915d"
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Outcome', 'Sex', 'Age']"
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1[commons1].dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qwcgzhXxbMES",
        "outputId": "a759cae9-207b-43c8-e333-04596566a0a4"
      },
      "execution_count": 117,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Outcome    int64\n",
              "Sex        int64\n",
              "Age        int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "csv[commons1].dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cRbg8tZmbOTi",
        "outputId": "b442bb70-9803-4653-a914-c1011c82c532"
      },
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Outcome      int64\n",
              "Sex          int64\n",
              "Age        float64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "csv['Age'] = csv['Age'].astype(int)"
      ],
      "metadata": {
        "id": "10kV3ET5bT6w"
      },
      "execution_count": 119,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Merging df1 and csv DataFrames on common columns using inner join\n",
        "df2 = pd.merge(df1, csv, on=commons1, how='inner')\n",
        "df2.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        },
        "id": "Hm0Pdy_zaE3H",
        "outputId": "3082fdd2-4e79-4f53-f014-af69e42f162c"
      },
      "execution_count": 120,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Age  Sex   Bmi    Bp   S1    S2    S3   S4      S5  Glucose  ...  Insulin  \\\n",
              "0   23    0  22.6  89.0  139  64.8  61.0  2.0  4.1897       68  ...       15   \n",
              "1   23    0  22.6  89.0  139  64.8  61.0  2.0  4.1897       68  ...       15   \n",
              "2   23    0  22.6  89.0  139  64.8  61.0  2.0  4.1897       68  ...       15   \n",
              "3   23    0  22.6  89.0  139  64.8  61.0  2.0  4.1897       68  ...       15   \n",
              "4   23    0  22.6  89.0  139  64.8  61.0  2.0  4.1897       68  ...       15   \n",
              "\n",
              "   bmi_y  Diabetespedigreefunction  Outcome  hypertension  heart_disease  \\\n",
              "0   20.1                     0.257        0             0              0   \n",
              "1   20.1                     0.257        0             0              0   \n",
              "2   20.1                     0.257        0             0              0   \n",
              "3   20.1                     0.257        0             0              0   \n",
              "4   20.1                     0.257        0             0              0   \n",
              "\n",
              "   smoking_history  bmi_x  Hba1c_level  glucose  \n",
              "0          No Info  24.56          3.5      155  \n",
              "1            never  24.21          3.5      140  \n",
              "2            never  22.55          4.0      158  \n",
              "3            never  27.32          6.0      140  \n",
              "4          current  24.37          6.0      140  \n",
              "\n",
              "[5 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-86e6dcb3-574c-4786-a099-4cc20a100129\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Bmi</th>\n",
              "      <th>Bp</th>\n",
              "      <th>S1</th>\n",
              "      <th>S2</th>\n",
              "      <th>S3</th>\n",
              "      <th>S4</th>\n",
              "      <th>S5</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>...</th>\n",
              "      <th>Insulin</th>\n",
              "      <th>bmi_y</th>\n",
              "      <th>Diabetespedigreefunction</th>\n",
              "      <th>Outcome</th>\n",
              "      <th>hypertension</th>\n",
              "      <th>heart_disease</th>\n",
              "      <th>smoking_history</th>\n",
              "      <th>bmi_x</th>\n",
              "      <th>Hba1c_level</th>\n",
              "      <th>glucose</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>22.6</td>\n",
              "      <td>89.0</td>\n",
              "      <td>139</td>\n",
              "      <td>64.8</td>\n",
              "      <td>61.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1897</td>\n",
              "      <td>68</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>20.1</td>\n",
              "      <td>0.257</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>24.56</td>\n",
              "      <td>3.5</td>\n",
              "      <td>155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>22.6</td>\n",
              "      <td>89.0</td>\n",
              "      <td>139</td>\n",
              "      <td>64.8</td>\n",
              "      <td>61.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1897</td>\n",
              "      <td>68</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>20.1</td>\n",
              "      <td>0.257</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>24.21</td>\n",
              "      <td>3.5</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>22.6</td>\n",
              "      <td>89.0</td>\n",
              "      <td>139</td>\n",
              "      <td>64.8</td>\n",
              "      <td>61.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1897</td>\n",
              "      <td>68</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>20.1</td>\n",
              "      <td>0.257</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>22.55</td>\n",
              "      <td>4.0</td>\n",
              "      <td>158</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>22.6</td>\n",
              "      <td>89.0</td>\n",
              "      <td>139</td>\n",
              "      <td>64.8</td>\n",
              "      <td>61.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1897</td>\n",
              "      <td>68</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>20.1</td>\n",
              "      <td>0.257</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.0</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>22.6</td>\n",
              "      <td>89.0</td>\n",
              "      <td>139</td>\n",
              "      <td>64.8</td>\n",
              "      <td>61.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1897</td>\n",
              "      <td>68</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>20.1</td>\n",
              "      <td>0.257</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>current</td>\n",
              "      <td>24.37</td>\n",
              "      <td>6.0</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86e6dcb3-574c-4786-a099-4cc20a100129')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-86e6dcb3-574c-4786-a099-4cc20a100129 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-86e6dcb3-574c-4786-a099-4cc20a100129');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2b6fd38a-1db0-4493-8dda-5c23b04e00ca\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b6fd38a-1db0-4493-8dda-5c23b04e00ca')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2b6fd38a-1db0-4493-8dda-5c23b04e00ca button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 120
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DWo9OBhEc9EL",
        "outputId": "996b4ba4-9f5d-4f8a-820e-bbeb2fe7b793"
      },
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(26880, 24)"
            ]
          },
          "metadata": {},
          "execution_count": 121
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2.duplicated().any()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W5nK1Qwwc5Ns",
        "outputId": "a8ccdb4b-9b89-47ac-f04e-1ac62ba5d073"
      },
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e6JCGk9WdGOZ",
        "outputId": "15e52aa0-c35f-4b4a-e7c7-a4ba5c3bbb0d"
      },
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Age', 'Sex', 'Bmi', 'Bp', 'S1', 'S2', 'S3', 'S4', 'S5', 'Glucose', 'Y',\n",
              "       'Pregnancies', 'Bloodpressure', 'Skinthickness', 'Insulin', 'bmi_y',\n",
              "       'Diabetespedigreefunction', 'Outcome', 'hypertension', 'heart_disease',\n",
              "       'smoking_history', 'bmi_x', 'Hba1c_level', 'glucose'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##  My Analysis"
      ],
      "metadata": {
        "id": "glHARmz_dNE0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a histogram of the 'Age' column using Seaborn displot\n",
        "fx = sns.displot(data= df2, x='Age', kind='hist', color = sns.color_palette()[1], bins = 20)\n",
        "# Setting title, xlabel, and ylabel for better clarity\n",
        "fx.set(title='Age Histogram', xlabel='Age', ylabel='Frequency')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 546
        },
        "id": "q5xxJ8VUdXqk",
        "outputId": "8cfe2f37-939e-4e99-f042-39fb78055bba"
      },
      "execution_count": 124,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8aa9ede40>"
            ]
          },
          "metadata": {},
          "execution_count": 124
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAeoAAAIACAYAAABNWi9DAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABBdUlEQVR4nO3deVyVZf7/8TeCLC6AG4ujKKWJpGZgKaOWCyMZNZrUmGmaS44OlkuL+csxs5KyUbNSaVGxh5rLjJVpqeQ6Km7klhppUViyRApHTDa5f3/09R6PYOnh6LmL1/PxuB95rus61/ncd8fe3efe3AzDMAQAACypmqsLAAAAl0dQAwBgYQQ1AAAWRlADAGBhBDUAABZGUAMAYGEENQAAFkZQAwBgYQQ1AAAWRlADqNDkyZPl5ubm6jKAKo+gBq6hOXPmyM3NTe3bt3d1KXJzc9OoUaMq7EtKSpKbm5v27t1bqc84efKkJk+erP3791dqHgD/Q1AD19DixYvVtGlT7d69W8ePH3d1OVdl4sSJOnfu3FW95+TJk3r++ecJasCJCGrgGklPT9eOHTs0Y8YMNWjQQIsXL3Z1SVfFw8ND3t7eri7jqpSWlqq4uNjVZQBORVAD18jixYtVp04dxcbG6v77779sUP/00096+OGH5evrK39/fw0aNEgHDhyQm5ubkpKS7MZ++eWXuv/++1W3bl15e3urXbt2WrVq1TWpv6Jj1MnJyerUqZP8/f1Vq1YttWjRQv/v//0/SdLmzZt12223SZIGDx4sNze3cuuwYsUKRUZGysfHR/Xr19eAAQP0ww8/lPvsFStWKDw8XN7e3mrVqpU++OADPfLII2ratKk55ttvv5Wbm5v+9a9/6bXXXtONN94oLy8vHTlyRMXFxZo0aZIiIyPl5+enmjVrqnPnztq0aZPd51w8x+zZs3XDDTeoRo0a6tGjh06cOCHDMPTCCy+oUaNG8vHxUa9evXTq1CknbWHgyni4ugDgj2rx4sXq06ePPD091a9fP82dO1d79uwxw0ySysrKdO+992r37t0aOXKkwsLC9NFHH2nQoEHl5jt8+LA6duyoP/3pT3rmmWdUs2ZNLV++XL1799Z//vMf3Xfffb9ZU2FhoXJzc8u1FxQU/OZ7Dx8+rHvuuUdt2rTRlClT5OXlpePHj2v79u2SpJYtW2rKlCmaNGmShg8frs6dO0uS/vznP0v65Tj44MGDddtttykhIUHZ2dmaNWuWtm/frn379snf31+StGbNGvXt21etW7dWQkKCTp8+raFDh+pPf/pThXUtWLBAhYWFGj58uLy8vFS3bl3ZbDa9++676tevnx599FGdOXNG8+bNU0xMjHbv3q22bdvazbF48WIVFxfrscce06lTpzRt2jT97W9/U7du3bR582aNHz9ex48f1xtvvKEnn3xS8+fP/83tBTiNAcDp9u7da0gykpOTDcMwjLKyMqNRo0bG6NGj7cb95z//MSQZr732mtl2/vx5o1u3boYkY8GCBWZ79+7djdatWxuFhYVmW1lZmfHnP//ZaN68+W/WJOk3lz179pjjn3vuOePi/0TMnDnTkGT8+OOPl/2MPXv2lKvbMAyjuLjYCAgIMFq1amWcO3fObF+9erUhyZg0aZLZ1rp1a6NRo0bGmTNnzLbNmzcbkowmTZqYbenp6YYkw9fX18jJybH7vNLSUqOoqMiu7fTp00ZgYKAxZMiQcnM0aNDAyMvLM9snTJhgSDJuueUWo6SkxGzv16+f4enpaffvALjW+OkbuAYWL16swMBAde3aVdIvZ1z37dtXS5cu1fnz581xa9euVfXq1fXoo4+abdWqVVN8fLzdfKdOndLGjRv1t7/9TWfOnFFubq5yc3P1008/KSYmRseOHavwJ+RL9erVS8nJyeWWp5566jffe2GP96OPPlJZWdmVbAbT3r17lZOTo3/84x92x71jY2MVFhamNWvWSPrlZLRDhw5p4MCBqlWrljnuzjvvVOvWrSucOy4uTg0aNLBrc3d3l6enp6RffrU4deqUSktL1a5dO33++efl5njggQfk5+dnvr5wlv6AAQPk4eFh115cXHxF2xpwFoIacLLz589r6dKl6tq1q9LT03X8+HEdP35c7du3V3Z2tjZs2GCO/e677xQcHKwaNWrYzdGsWTO718ePH5dhGPrnP/+pBg0a2C3PPfecJCknJ+c3a2vUqJGio6PLLeHh4b/53r59+6pjx44aNmyYAgMD9eCDD2r58uVXFNrfffedJKlFixbl+sLCwsz+C/+8dP0v1yZJoaGhFbYvXLhQbdq0kbe3t+rVq6cGDRpozZo1ys/PLzc2JCTE7vWF0G7cuHGF7adPn67wM4FrgWPUgJNt3LhRmZmZWrp0qZYuXVquf/HixerRo8dVzXkhDJ988knFxMRUOOZyQeYsPj4+2rp1qzZt2qQ1a9Zo7dq1WrZsmbp166b169fL3d39mn7+r9V1qUWLFumRRx5R79699dRTTykgIEDu7u5KSEjQ119/XW785Wq/XLthGJUrGrgKBDXgZIsXL1ZAQIBmz55drm/lypX64IMPlJiYKB8fHzVp0kSbNm3Szz//bLdXfek11zfccIMkqXr16oqOjr62K/ArqlWrpu7du6t79+6aMWOGpk6dqmeffVabNm1SdHT0Ze9k1qRJE0lSWlqaunXrZteXlpZm9l/4Z0XXnF/Ndej//ve/dcMNN2jlypV2NV349QH4PeGnb8CJzp07p5UrV+qee+7R/fffX24ZNWqUzpw5Y15SFRMTo5KSEr3zzjvmHGVlZeVCPiAgQF26dNFbb72lzMzMcp/7448/XtsVkyq8LOnC2dNFRUWSpJo1a0qS8vLy7Ma1a9dOAQEBSkxMNMdK0qeffqqjR48qNjZWktSwYUO1atVK7733nt2Z6Fu2bNGhQ4euuNYLe8IX7/nu2rVLKSkpVzwHYBXsUQNOtGrVKp05c0Z//etfK+zv0KGDefOTvn37qnfv3rr99tv1xBNP6Pjx4woLC9OqVavMULx4b3D27Nnq1KmTWrdurUcffVQ33HCDsrOzlZKSou+//14HDhy4pus2ZcoUbd26VbGxsWrSpIlycnI0Z84cNWrUSJ06dZIk3XjjjfL391diYqJq166tmjVrqn379goNDdUrr7yiwYMH684771S/fv3My7OaNm2qsWPHmp8zdepU9erVSx07dtTgwYN1+vRpvfnmm2rVqtUVXUYmSffcc49Wrlyp++67T7GxsUpPT1diYqLCw8OveA7AKtijBpxo8eLF8vb21l/+8pcK+6tVq6bY2FitXbtWP/30k9zd3c3rhhcuXKhnn31WDRs2NPeoLz5DOjw8XHv37lVsbKySkpIUHx+vxMREVatWTZMmTbrm6/bXv/5VISEhmj9/vuLj4zV79mzdcccd2rhxo3mSVfXq1bVw4UK5u7trxIgR6tevn7Zs2SJJeuSRR7Rs2TIVFxdr/Pjxeuutt3Tfffdp27Zt5hnlknTvvffq/fffV3FxsZ555hmtXLlSSUlJatGixRXfKe2RRx7R1KlTdeDAAT3++ONat26dFi1apHbt2jl9uwDXmpvBWRGA5Xz44YdmiHXs2NHV5VhC27Zt1aBBAyUnJ7u6FOC6Yo8acLFLH3xx/vx5vfHGG/L19VVERISLqnKdkpISlZaW2rVt3rxZBw4cUJcuXVxTFOBCHKMGXOyxxx7TuXPnFBUVpaKiIq1cuVI7duzQ1KlTK7z06I/uhx9+UHR0tAYMGKCGDRvqyy+/VGJiooKCgjRixAhXlwdcd/z0DbjYkiVLNH36dB0/flyFhYVq1qyZRo4cedlnR//R5efna/jw4dq+fbt+/PFH1axZU927d9fLL7+sG2+80dXlAdcdQQ0AgIVxjBoAAAsjqAEAsDCC+goYhiGbzcb9fQEA1x1BfQXOnDkjPz8/nTlzxtWlAACqGIIaAAALI6gBALAwghoAAAsjqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwghoAAAsjqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwlwZ106ZN5ebmVm6Jj4+XJBUWFio+Pl716tVTrVq1FBcXp+zsbLs5MjIyFBsbqxo1aiggIEBPPfWUSktL7cZs3rxZERER8vLyUrNmzZSUlHS9VhEAgEpxaVDv2bNHmZmZ5pKcnCxJeuCBByRJY8eO1ccff6wVK1Zoy5YtOnnypPr06WO+//z584qNjVVxcbF27NihhQsXKikpSZMmTTLHpKenKzY2Vl27dtX+/fs1ZswYDRs2TOvWrbu+KwsAgAPcDMMwXF3EBWPGjNHq1at17Ngx2Ww2NWjQQEuWLNH9998vSfryyy/VsmVLpaSkqEOHDvr00091zz336OTJkwoMDJQkJSYmavz48frxxx/l6emp8ePHa82aNfriiy/Mz3nwwQeVl5entWvXXlFdNptNfn5+ys/Pl6+vr/NXHACAy7DMMeri4mItWrRIQ4YMkZubm1JTU1VSUqLo6GhzTFhYmEJCQpSSkiJJSklJUevWrc2QlqSYmBjZbDYdPnzYHHPxHBfGXJgDAAAr83B1ARd8+OGHysvL0yOPPCJJysrKkqenp/z9/e3GBQYGKisryxxzcUhf6L/Q92tjbDabzp07Jx8fn3K1FBUVqaioyHxts9kqtW6XysjIUG5ubqXnqV+/vkJCQpxQEQDAqiwT1PPmzVPPnj3VsGFDV5eihIQEPf/889dk7oyMDLUMa6GfzxVWeq4aPt46+mUaYQ0Af2CWCOrvvvtOn332mVauXGm2BQUFqbi4WHl5eXZ71dnZ2QoKCjLH7N69226uC2eFXzzm0jPFs7Oz5evrW+HetCRNmDBB48aNM1/bbDY1btzY8RW8SG5urn4+V6hFw9uqZXAth+c5mlmgAW/vV25uLkENAH9glgjqBQsWKCAgQLGxsWZbZGSkqlevrg0bNiguLk6SlJaWpoyMDEVFRUmSoqKi9NJLLyknJ0cBAQGSpOTkZPn6+io8PNwc88knn9h9XnJysjlHRby8vOTl5eXUdbxUy+Baimjqd00/AwDw++fyk8nKysq0YMECDRo0SB4e//v/Bj8/Pw0dOlTjxo3Tpk2blJqaqsGDBysqKkodOnSQJPXo0UPh4eF6+OGHdeDAAa1bt04TJ05UfHy8GbQjRozQN998o6efflpffvml5syZo+XLl2vs2LEuWV8AAK6Gy/eoP/vsM2VkZGjIkCHl+mbOnKlq1aopLi5ORUVFiomJ0Zw5c8x+d3d3rV69WiNHjlRUVJRq1qypQYMGacqUKeaY0NBQrVmzRmPHjtWsWbPUqFEjvfvuu4qJibku6wcAQGVY6jpqq3LmddSff/65IiMjlfpcp0r99P35t/mKfH6bUlNTFRERUamaAADW5fKfvgEAwOUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFiYy4P6hx9+0IABA1SvXj35+PiodevW2rt3r9lvGIYmTZqk4OBg+fj4KDo6WseOHbOb49SpU+rfv798fX3l7++voUOHqqCgwG7MwYMH1blzZ3l7e6tx48aaNm3adVk/AAAqw6VBffr0aXXs2FHVq1fXp59+qiNHjmj69OmqU6eOOWbatGl6/fXXlZiYqF27dqlmzZqKiYlRYWGhOaZ///46fPiwkpOTtXr1am3dulXDhw83+202m3r06KEmTZooNTVVr776qiZPnqy33377uq4vAABXy8OVH/7KK6+ocePGWrBggdkWGhpq/tkwDL322muaOHGievXqJUl67733FBgYqA8//FAPPvigjh49qrVr12rPnj1q166dJOmNN97Q3XffrX/9619q2LChFi9erOLiYs2fP1+enp66+eabtX//fs2YMcMu0AEAsBqX7lGvWrVK7dq10wMPPKCAgADdeuuteuedd8z+9PR0ZWVlKTo62mzz8/NT+/btlZKSIklKSUmRv7+/GdKSFB0drWrVqmnXrl3mmDvuuEOenp7mmJiYGKWlpen06dPl6ioqKpLNZrNbAABwBZcG9TfffKO5c+eqefPmWrdunUaOHKnHH39cCxculCRlZWVJkgIDA+3eFxgYaPZlZWUpICDArt/Dw0N169a1G1PRHBd/xsUSEhLk5+dnLo0bN3bC2gIAcPVcGtRlZWWKiIjQ1KlTdeutt2r48OF69NFHlZiY6MqyNGHCBOXn55vLiRMnXFoPAKDqcmlQBwcHKzw83K6tZcuWysjIkCQFBQVJkrKzs+3GZGdnm31BQUHKycmx6y8tLdWpU6fsxlQ0x8WfcTEvLy/5+vraLQAAuIJLg7pjx45KS0uza/vqq6/UpEkTSb+cWBYUFKQNGzaY/TabTbt27VJUVJQkKSoqSnl5eUpNTTXHbNy4UWVlZWrfvr05ZuvWrSopKTHHJCcnq0WLFnZnmAMAYDUuDeqxY8dq586dmjp1qo4fP64lS5bo7bffVnx8vCTJzc1NY8aM0YsvvqhVq1bp0KFDGjhwoBo2bKjevXtL+mUP/K677tKjjz6q3bt3a/v27Ro1apQefPBBNWzYUJL00EMPydPTU0OHDtXhw4e1bNkyzZo1S+PGjXPVqgMAcEVcennWbbfdpg8++EATJkzQlClTFBoaqtdee039+/c3xzz99NM6e/ashg8frry8PHXq1Elr166Vt7e3OWbx4sUaNWqUunfvrmrVqikuLk6vv/662e/n56f169crPj5ekZGRql+/viZNmsSlWQAAy3MzDMNwdRFWZ7PZ5Ofnp/z8/Eofr/78888VGRmp1Oc6KaKpn+PzfJuvyOe3KTU1VREREZWqCQBgXS6/hSgAALg8ghoAAAsjqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwghoAAAsjqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwghoAAAsjqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwghoAAAsjqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwghoAAAsjqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwghoAAAsjqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwghoAAAsjqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwghoAAAsjqAEAsDCCGgAACyOoAQCwMJcG9eTJk+Xm5ma3hIWFmf2FhYWKj49XvXr1VKtWLcXFxSk7O9tujoyMDMXGxqpGjRoKCAjQU089pdLSUrsxmzdvVkREhLy8vNSsWTMlJSVdj9UDAKDSXL5HffPNNyszM9Nctm3bZvaNHTtWH3/8sVasWKEtW7bo5MmT6tOnj9l//vx5xcbGqri4WDt27NDChQuVlJSkSZMmmWPS09MVGxurrl27av/+/RozZoyGDRumdevWXdf1BADAER4uL8DDQ0FBQeXa8/PzNW/ePC1ZskTdunWTJC1YsEAtW7bUzp071aFDB61fv15HjhzRZ599psDAQLVt21YvvPCCxo8fr8mTJ8vT01OJiYkKDQ3V9OnTJUktW7bUtm3bNHPmTMXExFzXdQUA4Gq5fI/62LFjatiwoW644Qb1799fGRkZkqTU1FSVlJQoOjraHBsWFqaQkBClpKRIklJSUtS6dWsFBgaaY2JiYmSz2XT48GFzzMVzXBhzYY6KFBUVyWaz2S0AALiCS4O6ffv2SkpK0tq1azV37lylp6erc+fOOnPmjLKysuTp6Sl/f3+79wQGBiorK0uSlJWVZRfSF/ov9P3aGJvNpnPnzlVYV0JCgvz8/MylcePGzlhdAACumkt/+u7Zs6f55zZt2qh9+/Zq0qSJli9fLh8fH5fVNWHCBI0bN858bbPZCGsAgEu4/Kfvi/n7++umm27S8ePHFRQUpOLiYuXl5dmNyc7ONo9pBwUFlTsL/MLr3xrj6+t72f8Z8PLykq+vr90CAIArWCqoCwoK9PXXXys4OFiRkZGqXr26NmzYYPanpaUpIyNDUVFRkqSoqCgdOnRIOTk55pjk5GT5+voqPDzcHHPxHBfGXJgDAAArc2lQP/nkk9qyZYu+/fZb7dixQ/fdd5/c3d3Vr18/+fn5aejQoRo3bpw2bdqk1NRUDR48WFFRUerQoYMkqUePHgoPD9fDDz+sAwcOaN26dZo4caLi4+Pl5eUlSRoxYoS++eYbPf300/ryyy81Z84cLV++XGPHjnXlqgMAcEVceoz6+++/V79+/fTTTz+pQYMG6tSpk3bu3KkGDRpIkmbOnKlq1aopLi5ORUVFiomJ0Zw5c8z3u7u7a/Xq1Ro5cqSioqJUs2ZNDRo0SFOmTDHHhIaGas2aNRo7dqxmzZqlRo0a6d133+XSLADA74KbYRiGq4uwOpvNJj8/P+Xn51f6ePXnn3+uyMhIpT7XSRFN/Ryf59t8RT6/TampqYqIiKhUTQAA67LUMWoAAGCPoAYAwMIIagAALIygBgDAwghqAAAsjKAGAMDCCGoAACyMoAYAwMIIagAALIygBgDAwghqAAAsjKAGAMDCCGoAACyMoAYAwMIIagAALIygBgDAwghqAAAsjKAGAMDCCGoAACyMoAYAwMIIagAALIygBgDAwghqAAAsjKAGAMDCCGoAACyMoAYAwMIIagAALIygBgDAwghqAAAsjKAGAMDCCGoAACyMoAYAwMIIagAALIygBgDAwghqAAAsjKAGAMDCCGoAACyMoAYAwMIcCupvvvnG2XUAAIAKOBTUzZo1U9euXbVo0SIVFhY6uyYAAPB/HArqzz//XG3atNG4ceMUFBSkv//979q9e7ezawMAoMpzKKjbtm2rWbNm6eTJk5o/f74yMzPVqVMntWrVSjNmzNCPP/7o7DoBAKiSKnUymYeHh/r06aMVK1bolVde0fHjx/Xkk0+qcePGGjhwoDIzM51VJwAAVVKlgnrv3r36xz/+oeDgYM2YMUNPPvmkvv76ayUnJ+vkyZPq1auXs+oEAKBK8nDkTTNmzNCCBQuUlpamu+++W++9957uvvtuVav2S+6HhoYqKSlJTZs2dWatAABUOQ4F9dy5czVkyBA98sgjCg4OrnBMQECA5s2bV6niAACo6hwK6mPHjv3mGE9PTw0aNMiR6QEAwP9x6Bj1ggULtGLFinLtK1as0MKFCx0q5OWXX5abm5vGjBljthUWFio+Pl716tVTrVq1FBcXp+zsbLv3ZWRkKDY2VjVq1FBAQICeeuoplZaW2o3ZvHmzIiIi5OXlpWbNmikpKcmhGgEAuN4cCuqEhATVr1+/XHtAQICmTp161fPt2bNHb731ltq0aWPXPnbsWH388cdasWKFtmzZopMnT6pPnz5m//nz5xUbG6vi4mLt2LFDCxcuVFJSkiZNmmSOSU9PV2xsrLp27ar9+/drzJgxGjZsmNatW3fVdQIAcL05FNQZGRkKDQ0t196kSRNlZGRc1VwFBQXq37+/3nnnHdWpU8dsz8/P17x58zRjxgx169ZNkZGRWrBggXbs2KGdO3dKktavX68jR45o0aJFatu2rXr27KkXXnhBs2fPVnFxsSQpMTFRoaGhmj59ulq2bKlRo0bp/vvv18yZMx1ZdQAAriuHgjogIEAHDx4s137gwAHVq1fvquaKj49XbGysoqOj7dpTU1NVUlJi1x4WFqaQkBClpKRIklJSUtS6dWsFBgaaY2JiYmSz2XT48GFzzKVzx8TEmHNUpKioSDabzW4BAMAVHDqZrF+/fnr88cdVu3Zt3XHHHZKkLVu2aPTo0XrwwQeveJ6lS5fq888/1549e8r1ZWVlydPTU/7+/nbtgYGBysrKMsdcHNIX+i/0/doYm82mc+fOycfHp9xnJyQk6Pnnn7/i9QAA4FpxKKhfeOEFffvtt+revbs8PH6ZoqysTAMHDrziY9QnTpzQ6NGjlZycLG9vb0fKuGYmTJigcePGma9tNpsaN27swooAAFWVQ0Ht6empZcuW6YUXXtCBAwfk4+Oj1q1bq0mTJlc8R2pqqnJychQREWG2nT9/Xlu3btWbb76pdevWqbi4WHl5eXZ71dnZ2QoKCpIkBQUFlXsYyIWzwi8ec+mZ4tnZ2fL19a1wb1qSvLy85OXldcXrAgDAteJQUF9w00036aabbnLovd27d9ehQ4fs2gYPHqywsDCNHz9ejRs3VvXq1bVhwwbFxcVJktLS0pSRkaGoqChJUlRUlF566SXl5OQoICBAkpScnCxfX1+Fh4ebYz755BO7z0lOTjbnAADAyhwK6vPnzyspKUkbNmxQTk6OysrK7Po3btz4m3PUrl1brVq1smurWbOm6tWrZ7YPHTpU48aNU926deXr66vHHntMUVFR6tChgySpR48eCg8P18MPP6xp06YpKytLEydOVHx8vLlHPGLECL355pt6+umnNWTIEG3cuFHLly/XmjVrHFl1wBIyMjKUm5tb6Xnq16+vkJAQJ1QE4FpxKKhHjx6tpKQkxcbGqlWrVnJzc3N2XZKkmTNnqlq1aoqLi1NRUZFiYmI0Z84cs9/d3V2rV6/WyJEjFRUVpZo1a2rQoEGaMmWKOSY0NFRr1qzR2LFjNWvWLDVq1EjvvvuuYmJirknNwLWWkZGhlmEt9PO5wkrPVcPHW0e/TCOsAQtzKKiXLl2q5cuX6+6773ZqMZs3b7Z77e3trdmzZ2v27NmXfU+TJk3K/bR9qS5dumjfvn3OKBFwudzcXP18rlCLhrdVy+BaDs9zNLNAA97er9zcXIIasDCHTyZr1qyZs2sBcBVaBtdSRFM/V5cB4Bpz6IYnTzzxhGbNmiXDMJxdDwAAuIhDe9Tbtm3Tpk2b9Omnn+rmm29W9erV7fpXrlzplOIAAKjqHApqf39/3Xfffc6uBQAAXMKhoF6wYIGz6wAAABVw6Bi1JJWWluqzzz7TW2+9pTNnzkiSTp48qYKCAqcVBwBAVefQHvV3332nu+66SxkZGSoqKtJf/vIX1a5dW6+88oqKioqUmJjo7DoBAKiSHNqjHj16tNq1a6fTp0/b3S/7vvvu04YNG5xWHAAAVZ1De9T//e9/tWPHDnl6etq1N23aVD/88INTCgMAAA7uUZeVlen8+fPl2r///nvVrl270kUBAIBfOBTUPXr00GuvvWa+dnNzU0FBgZ577jmn31YUAICqzKGfvqdPn66YmBiFh4ersLBQDz30kI4dO6b69evr/fffd3aNAABUWQ4FdaNGjXTgwAEtXbpUBw8eVEFBgYYOHar+/fvbnVwGAAAqx6GgliQPDw8NGDDAmbUAAIBLOBTU77333q/2Dxw40KFiAACAPYeCevTo0XavS0pK9PPPP8vT01M1atQgqAEAcBKHzvo+ffq03VJQUKC0tDR16tSJk8kAAHAih+/1fanmzZvr5ZdfLre3DQAAHOe0oJZ+OcHs5MmTzpwSAIAqzaFj1KtWrbJ7bRiGMjMz9eabb6pjx45OKQwAADgY1L1797Z77ebmpgYNGqhbt26aPn26M+oCAAByMKjLysqcXQcAAKiAU49RAwAA53Joj3rcuHFXPHbGjBmOfAQAAJCDQb1v3z7t27dPJSUlatGihSTpq6++kru7uyIiIsxxbm5uzqkSAIAqyqGgvvfee1W7dm0tXLhQderUkfTLTVAGDx6szp0764knnnBqkQAAVFUOHaOePn26EhISzJCWpDp16ujFF1/krG8AAJzIoaC22Wz68ccfy7X/+OOPOnPmTKWLAgAAv3AoqO+77z4NHjxYK1eu1Pfff6/vv/9e//nPfzR06FD16dPH2TUCAFBlOXSMOjExUU8++aQeeughlZSU/DKRh4eGDh2qV1991akFAgBQlTkU1DVq1NCcOXP06quv6uuvv5Yk3XjjjapZs6ZTiwMAoKqr1A1PMjMzlZmZqebNm6tmzZoyDMNZdQEAADkY1D/99JO6d++um266SXfffbcyMzMlSUOHDuXSLAAAnMihoB47dqyqV6+ujIwM1ahRw2zv27ev1q5d67TiAACo6hw6Rr1+/XqtW7dOjRo1smtv3ry5vvvuO6cUBgAAHNyjPnv2rN2e9AWnTp2Sl5dXpYsCAAC/cCioO3furPfee8987ebmprKyMk2bNk1du3Z1WnEAAFR1Dv30PW3aNHXv3l179+5VcXGxnn76aR0+fFinTp3S9u3bnV0jAABVlkN71K1atdJXX32lTp06qVevXjp79qz69Omjffv26cYbb3R2jQAAVFlXvUddUlKiu+66S4mJiXr22WevRU0AAOD/XPUedfXq1XXw4MFrUQsAALiEQz99DxgwQPPmzXN2LQAA4BIOnUxWWlqq+fPn67PPPlNkZGS5e3zPmDHDKcUBAFDVXVVQf/PNN2ratKm++OILRURESJK++uoruzFubm7Oqw4AgCruqoK6efPmyszM1KZNmyT9csvQ119/XYGBgdekOAAAqrqrOkZ96dOxPv30U509e9apBQEAgP+p1GMueawlAADX1lUFtZubW7lj0JU5Jj137ly1adNGvr6+8vX1VVRUlD799FOzv7CwUPHx8apXr55q1aqluLg4ZWdn282RkZGh2NhY1ahRQwEBAXrqqadUWlpqN2bz5s2KiIiQl5eXmjVrpqSkJIdrBgDgerqqY9SGYeiRRx4xH7xRWFioESNGlDvre+XKlVc0X6NGjfTyyy+refPmMgxDCxcuVK9evbRv3z7dfPPNGjt2rNasWaMVK1bIz89Po0aNUp8+fczblJ4/f16xsbEKCgrSjh07lJmZqYEDB6p69eqaOnWqJCk9PV2xsbEaMWKEFi9erA0bNmjYsGEKDg5WTEzM1aw+AADX3VUF9aBBg+xeDxgwoFIffu+999q9fumllzR37lzt3LlTjRo10rx587RkyRJ169ZNkrRgwQK1bNlSO3fuVIcOHbR+/XodOXJEn332mQIDA9W2bVu98MILGj9+vCZPnixPT08lJiYqNDRU06dPlyS1bNlS27Zt08yZMwlqAIDlXVVQL1iw4FrVofPnz2vFihU6e/asoqKilJqaqpKSEkVHR5tjwsLCFBISopSUFHXo0EEpKSlq3bq13VnnMTExGjlypA4fPqxbb71VKSkpdnNcGDNmzJjL1lJUVKSioiLztc1mc96KAgBwFSp1MpkzHDp0SLVq1ZKXl5dGjBihDz74QOHh4crKypKnp6f8/f3txgcGBiorK0uSlJWVVe7SsAuvf2uMzWbTuXPnKqwpISFBfn5+5tK4cWNnrCoAAFfN5UHdokUL7d+/X7t27dLIkSM1aNAgHTlyxKU1TZgwQfn5+eZy4sQJl9YDAKi6HLqFqDN5enqqWbNmkqTIyEjt2bNHs2bNUt++fVVcXKy8vDy7vers7GwFBQVJkoKCgrR79267+S6cFX7xmEvPFM/Ozpavr698fHwqrMnLy8s8YQ4AAFdy+R71pcrKylRUVKTIyEhVr15dGzZsMPvS0tKUkZGhqKgoSVJUVJQOHTqknJwcc0xycrJ8fX0VHh5ujrl4jgtjLswBAICVuXSPesKECerZs6dCQkJ05swZLVmyRJs3b9a6devk5+enoUOHaty4capbt658fX312GOPKSoqSh06dJAk9ejRQ+Hh4Xr44Yc1bdo0ZWVlaeLEiYqPjzf3iEeMGKE333xTTz/9tIYMGaKNGzdq+fLlWrNmjStXHQCAK+LSoM7JydHAgQOVmZkpPz8/tWnTRuvWrdNf/vIXSdLMmTNVrVo1xcXFqaioSDExMZozZ475fnd3d61evVojR45UVFSUatasqUGDBmnKlCnmmNDQUK1Zs0Zjx47VrFmz1KhRI7377rtcmgUA+F1waVD/1jOtvb29NXv2bM2ePfuyY5o0aaJPPvnkV+fp0qWL9u3b51CNAAC4kuWOUQMAgP8hqAEAsDCCGgAACyOoAQCwMIIaAAALI6gBALAwl99CFJVz9OjRSs9Rv359hYSEOKEaAICzEdS/U5n5haqmyj8TXJJq+Hjr6JdphDUAWBBB/TuV93OpyiS983ALRdzQwOF5jmYWaMDb+5Wbm0tQA4AFEdS/cy2CaiiiqZ+rywAAXCOcTAYAgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYD+WAJJ5rDQBWRVBXcc58rrW3l5f+/Z//KDg4uFLzEPgA8D8EdRXnrOda//fYKY1bckT33HNPpWuq4eOto1+mEdYAIIIa/6eyz7U+mlnglMA/mlmgAW/vV25uLkENACKo4WSVDXwAgD2CGrgCGRkZys3NrfQ8HH8HcLUIauA3ZGRkqGVYC/18rrDSc3H8HcDVIqiB35Cbm6ufzxVq0fC2ahlcy+F5OP4OwBEENXCFWgbX4vg7gOuOO5MBAGBhBDUAABZGUAMAYGEENQAAFsbJZABwHXAtPhxFUAPANca1+KgMghoArjGuxUdlENQAcJ1wLT4cwclkAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFuTSoExISdNttt6l27doKCAhQ7969lZaWZjemsLBQ8fHxqlevnmrVqqW4uDhlZ2fbjcnIyFBsbKxq1KihgIAAPfXUUyotLbUbs3nzZkVERMjLy0vNmjVTUlLStV49AAAqzaVBvWXLFsXHx2vnzp1KTk5WSUmJevToobNnz5pjxo4dq48//lgrVqzQli1bdPLkSfXp08fsP3/+vGJjY1VcXKwdO3Zo4cKFSkpK0qRJk8wx6enpio2NVdeuXbV//36NGTNGw4YN07p1667r+gIAcLVcegvRtWvX2r1OSkpSQECAUlNTdccddyg/P1/z5s3TkiVL1K1bN0nSggUL1LJlS+3cuVMdOnTQ+vXrdeTIEX322WcKDAxU27Zt9cILL2j8+PGaPHmyPD09lZiYqNDQUE2fPl2S1LJlS23btk0zZ85UTEzMdV9vAACulKWOUefn50uS6tatK0lKTU1VSUmJoqOjzTFhYWEKCQlRSkqKJCklJUWtW7dWYGCgOSYmJkY2m02HDx82x1w8x4UxF+a4VFFRkWw2m90CAIArWCaoy8rKNGbMGHXs2FGtWrWSJGVlZcnT01P+/v52YwMDA5WVlWWOuTikL/Rf6Pu1MTabTefOnStXS0JCgvz8/MylcePGTllHAACulmWCOj4+Xl988YWWLl3q6lI0YcIE5efnm8uJEydcXRIAoIqyxGMuR40apdWrV2vr1q1q1KiR2R4UFKTi4mLl5eXZ7VVnZ2crKCjIHLN79267+S6cFX7xmEvPFM/Ozpavr698fHzK1ePl5SUvLy+nrBsAAJXh0j1qwzA0atQoffDBB9q4caNCQ0Pt+iMjI1W9enVt2LDBbEtLS1NGRoaioqIkSVFRUTp06JBycnLMMcnJyfL19VV4eLg55uI5Loy5MAcAAFbl0j3q+Ph4LVmyRB999JFq165tHlP28/OTj4+P/Pz8NHToUI0bN05169aVr6+vHnvsMUVFRalDhw6SpB49eig8PFwPP/ywpk2bpqysLE2cOFHx8fHmXvGIESP05ptv6umnn9aQIUO0ceNGLV++XGvWrHHZugMAcCVcukc9d+5c5efnq0uXLgoODjaXZcuWmWNmzpype+65R3FxcbrjjjsUFBSklStXmv3u7u5avXq13N3dFRUVpQEDBmjgwIGaMmWKOSY0NFRr1qxRcnKybrnlFk2fPl3vvvsul2YBACzPpXvUhmH85hhvb2/Nnj1bs2fPvuyYJk2a6JNPPvnVebp06aJ9+/ZddY0AALiSZc76BgAA5RHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIW5NKi3bt2qe++9Vw0bNpSbm5s+/PBDu37DMDRp0iQFBwfLx8dH0dHROnbsmN2YU6dOqX///vL19ZW/v7+GDh2qgoICuzEHDx5U586d5e3trcaNG2vatGnXetUAAHAKlwb12bNndcstt2j27NkV9k+bNk2vv/66EhMTtWvXLtWsWVMxMTEqLCw0x/Tv31+HDx9WcnKyVq9era1bt2r48OFmv81mU48ePdSkSROlpqbq1Vdf1eTJk/X2229f8/UDAKCyPFz54T179lTPnj0r7DMMQ6+99pomTpyoXr16SZLee+89BQYG6sMPP9SDDz6oo0ePau3atdqzZ4/atWsnSXrjjTd0991361//+pcaNmyoxYsXq7i4WPPnz5enp6duvvlm7d+/XzNmzLALdAAArMiyx6jT09OVlZWl6Ohos83Pz0/t27dXSkqKJCklJUX+/v5mSEtSdHS0qlWrpl27dplj7rjjDnl6eppjYmJilJaWptOnT1+ntQEAwDEu3aP+NVlZWZKkwMBAu/bAwECzLysrSwEBAXb9Hh4eqlu3rt2Y0NDQcnNc6KtTp065zy4qKlJRUZH52mazVXJtAABwjGX3qF0pISFBfn5+5tK4cWNXlwQAqKIsG9RBQUGSpOzsbLv27Oxssy8oKEg5OTl2/aWlpTp16pTdmIrmuPgzLjVhwgTl5+eby4kTJyq/QgAAOMCyQR0aGqqgoCBt2LDBbLPZbNq1a5eioqIkSVFRUcrLy1Nqaqo5ZuPGjSorK1P79u3NMVu3blVJSYk5Jjk5WS1atKjwZ29J8vLykq+vr90CAIAruDSoCwoKtH//fu3fv1/SLyeQ7d+/XxkZGXJzc9OYMWP04osvatWqVTp06JAGDhyohg0bqnfv3pKkli1b6q677tKjjz6q3bt3a/v27Ro1apQefPBBNWzYUJL00EMPydPTU0OHDtXhw4e1bNkyzZo1S+PGjXPRWgMAcOVcejLZ3r171bVrV/P1hfAcNGiQkpKS9PTTT+vs2bMaPny48vLy1KlTJ61du1be3t7mexYvXqxRo0ape/fuqlatmuLi4vT666+b/X5+flq/fr3i4+MVGRmp+vXra9KkSVyaBQD4XXBpUHfp0kWGYVy2383NTVOmTNGUKVMuO6Zu3bpasmTJr35OmzZt9N///tfhOgEAcBXLHqMGAAAENQAAlmbZG54AqHoyMjKUm5vrlLnq16+vkJAQp8wFuBJBDcASMjIy1DKshX4+V/jbg69ADR9vHf0yjbDG7x5BDVxnR48eden7rSo3N1c/nyvUouFt1TK4VqXmOppZoAFv71dubi5Bjd89ghq4TjLzC1VN0oABA5wyX1Fx0W8P+h1qGVxLEU39XF0GYBkENXCd5P1cqjJJ7zzcQhE3NHB4nk8O5eifK79SaWmp84oDYFkENXCdtQiqUak9xqOZBU6sBoDVcXkWAAAWxh41/rCcdanPH/XkLQC/DwQ1/pCcfamP9Mc9eQuAtRHU+ENy5qU+nLwFwJUIavyhOeNSH07eAuBKnEwGAICFEdQAAFgYP30DAP5QnHXFh1Ue7EJQAwD+MJx5xYdVHuxCUAMA/jCcdcWHlR7sQlADAP5w/kgPd+FkMgAALIw9agCV5oyTd7hVK1AxghpApTj7dq3cqhWwR1ADqBRnnbzDrVqBihHUAJyisifvcKtWoGKcTAYAgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFgYQQ0AgIUR1AAAWBhBDQCAhRHUAABYGEENAICFEdQAAFiYh6sLuJ5mz56tV199VVlZWbrlllv0xhtv6Pbbb3d1WYBLHT161KXvB/DrqkxQL1u2TOPGjVNiYqLat2+v1157TTExMUpLS1NAQICrywOuu8z8QlWTNGDAAKfMV1Rc5JR5ANirMkE9Y8YMPfrooxo8eLAkKTExUWvWrNH8+fP1zDPPuLg6XIq9vGsv7+dSlUl65+EWirihgcPzfHIoR/9c+ZVKS0udVxwAU5UI6uLiYqWmpmrChAlmW7Vq1RQdHa2UlJRy44uKilRU9L+9g/z8fEmSzWardC0FBQWSpNTv8lVQ5Ph/2I5mnpEk7c84I8P9pz/MPClfn5abnLeXt/N4bqW2s2S9beTsec4Vn6/UNiosOe/Ueio7jySlZZ2VJKWmppp/5xxVrVo1lZWVVa6etLRf6qnk33urrZcz53HWXM7e1gUFBU75b3/t2rXl5ubm2JuNKuCHH34wJBk7duywa3/qqaeM22+/vdz45557zpDEwsLCwsLilCU/P9/hDKsSe9RXa8KECRo3bpz5uqysTKdOnVK9evV+8/+IbDabGjdurBMnTsjX1/dal/qHwDa7emwzx7Ddrh7b7OpVtM1q167t8HxVIqjr168vd3d3ZWdn27VnZ2crKCio3HgvLy95eXnZtfn7+1/VZ/r6+vKlvkpss6vHNnMM2+3qsc2unrO2WZW4jtrT01ORkZHasGGD2VZWVqYNGzYoKirKhZUBAPDrqsQetSSNGzdOgwYNUrt27XT77bfrtdde09mzZ82zwAEAsKIqE9R9+/bVjz/+qEmTJikrK0tt27bV2rVrFRgY6NTP8fLy0nPPPVfup3NcHtvs6rHNHMN2u3pss6vn7G3mZhiG4ZSZAACA01WJY9QAAPxeEdQAAFgYQQ0AgIUR1AAAWBhB7YCEhATddtttql27tgICAtS7d2/z/rIXFBYWKj4+XvXq1VOtWrUUFxdX7oYrVcncuXPVpk0b8wYAUVFR+vTTT81+ttdve/nll+Xm5qYxY8aYbWy38iZPniw3Nze7JSwszOxnm1Xshx9+0IABA1SvXj35+PiodevW2rt3r9lvGIYmTZqk4OBg+fj4KDo6WseOHXNhxa7XtGnTct81Nzc3xcfHS3Led42gdsCWLVsUHx+vnTt3Kjk5WSUlJerRo4fOnj1rjhk7dqw+/vhjrVixQlu2bNHJkyfVp08fF1btWo0aNdLLL7+s1NRU7d27V926dVOvXr10+PBhSWyv37Jnzx699dZbatOmjV07261iN998szIzM81l27ZtZh/brLzTp0+rY8eOql69uj799FMdOXJE06dPV506dcwx06ZN0+uvv67ExETt2rVLNWvWVExMjAoLC11YuWvt2bPH7nuWnJwsSXrggQckOfG75vBdwmHKyckxJBlbtmwxDMMw8vLyjOrVqxsrVqwwxxw9etSQZKSkpLiqTMupU6eO8e6777K9fsOZM2eM5s2bG8nJycadd95pjB492jAMvmeX89xzzxm33HJLhX1ss4qNHz/e6NSp02X7y8rKjKCgIOPVV1812/Ly8gwvLy/j/fffvx4l/i6MHj3auPHGG42ysjKnftfYo3aCC4/BrFu3rqRfHkFXUlKi6Ohoc0xYWJhCQkIqfKxmVXP+/HktXbpUZ8+eVVRUFNvrN8THxys2NtZu+0h8z37NsWPH1LBhQ91www3q37+/MjIyJLHNLmfVqlVq166dHnjgAQUEBOjWW2/VO++8Y/anp6crKyvLbrv5+fmpffv2VXq7Xay4uFiLFi3SkCFD5Obm5tTvGkFdSWVlZRozZow6duyoVq1aSZKysrLk6elZ7kEegYGBysrKckGV1nDo0CHVqlVLXl5eGjFihD744AOFh4ezvX7F0qVL9fnnnyshIaFcH9utYu3bt1dSUpLWrl2ruXPnKj09XZ07d9aZM2fYZpfxzTffaO7cuWrevLnWrVunkSNH6vHHH9fChQslydw2l97Jsapvt4t9+OGHysvL0yOPPCLJuX8/q8wtRK+V+Ph4ffHFF3bHwFCxFi1aaP/+/crPz9e///1vDRo0SFu2bHF1WZZ14sQJjR49WsnJyfL29nZ1Ob8bPXv2NP/cpk0btW/fXk2aNNHy5cvl4+Pjwsqsq6ysTO3atdPUqVMlSbfeequ++OILJSYmatCgQS6u7vdh3rx56tmzpxo2bOj0udmjroRRo0Zp9erV2rRpkxo1amS2BwUFqbi4WHl5eXbjL/dYzarC09NTzZo1U2RkpBISEnTLLbdo1qxZbK/LSE1NVU5OjiIiIuTh4SEPDw9t2bJFr7/+ujw8PBQYGMh2uwL+/v666aabdPz4cb5rlxEcHKzw8HC7tpYtW5qHDC5smyt9VHBV89133+mzzz7TsGHDzDZnftcIagcYhqFRo0bpgw8+0MaNGxUaGmrXHxkZqerVq9s9VjMtLU0ZGRk8VvMiZWVlKioqYntdRvfu3XXo0CHt37/fXNq1a6f+/fubf2a7/baCggJ9/fXXCg4O5rt2GR07dix3ielXX32lJk2aSJJCQ0MVFBRkt91sNpt27dpVpbfbBQsWLFBAQIBiY2PNNqd+15x80luVMHLkSMPPz8/YvHmzkZmZaS4///yzOWbEiBFGSEiIsXHjRmPv3r1GVFSUERUV5cKqXeuZZ54xtmzZYqSnpxsHDx40nnnmGcPNzc1Yv369YRhsryt18VnfhsF2q8gTTzxhbN682UhPTze2b99uREdHG/Xr1zdycnIMw2CbVWT37t2Gh4eH8dJLLxnHjh0zFi9ebNSoUcNYtGiROebll182/P39jY8++sg4ePCg0atXLyM0NNQ4d+6cCyt3vfPnzxshISHG+PHjy/U567tGUDtAUoXLggULzDHnzp0z/vGPfxh16tQxatSoYdx3331GZmam64p2sSFDhhhNmjQxPD09jQYNGhjdu3c3Q9ow2F5X6tKgZruV17dvXyM4ONjw9PQ0/vSnPxl9+/Y1jh8/bvazzSr28ccfG61atTK8vLyMsLAw4+2337brLysrM/75z38agYGBhpeXl9G9e3cjLS3NRdVax7p16wxJFW4LZ33XeMwlAAAWxjFqAAAsjKAGAMDCCGoAACyMoAYAwMIIagAALIygBgDAwghqAAAsjKAGAMDCCGoAl5WSkiJ3d3e7exgDuL64MxmAyxo2bJhq1aqlefPmKS0t7Zo8wg/Ar2OPGkCFCgoKtGzZMo0cOVKxsbFKSkqy61+1apWaN28ub29vde3aVQsXLpSbm5vdY/22bdumzp07y8fHR40bN9bjjz+us2fPXt8VAX7nCGoAFVq+fLnCwsLUokULDRgwQPPnz9eFH+DS09N1//33q3fv3jpw4ID+/ve/69lnn7V7/9dff6277rpLcXFxOnjwoJYtW6Zt27Zp1KhRrlgd4HeLn74BVKhjx47629/+ptGjR6u0tFTBwcFasWKFunTpomeeeUZr1qzRoUOHzPETJ07USy+9pNOnT8vf31/Dhg2Tu7u73nrrLXPMtm3bdOedd+rs2bPy9vZ2xWoBvzvsUQMoJy0tTbt371a/fv0kSR4eHurbt6/mzZtn9t92221277n99tvtXh84cEBJSUmqVauWucTExKisrEzp6enXZ0WAPwAPVxcAwHrmzZun0tJSu5PHDMOQl5eX3nzzzSuao6CgQH//+9/1+OOPl+sLCQlxWq3AHx1BDcBOaWmp3nvvPU2fPl09evSw6+vdu7fef/99tWjRQp988old3549e+xeR0RE6MiRI2rWrNk1rxn4I+MYNQA7H374ofr27aucnBz5+fnZ9Y0fP14bN27U8uXL1aJFC40dO1ZDhw7V/v379cQTT+j7779XXl6e/Pz8dPDgQXXo0EFDhgzRsGHDVLNmTR05ckTJyclXvFcOgGPUAC4xb948RUdHlwtpSYqLi9PevXt15swZ/fvf/9bKlSvVpk0bzZ071zzr28vLS5LUpk0bbdmyRV999ZU6d+6sW2+9VZMmTeJabOAqsUcNwCleeuklJSYm6sSJE64uBfhD4Rg1AIfMmTNHt912m+rVq6ft27fr1Vdf5Rpp4BogqAE45NixY3rxxRd16tQphYSE6IknntCECRNcXRbwh8NP3wAAWBgnkwEAYGEENQAAFkZQAwBgYQQ1AAAWRlADAGBhBDUAABZGUAMAYGEENQAAFkZQAwBgYf8fPdJ7ZIA+D54AAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a box plot of the 'Age' column using Seaborn catplot\n",
        "fx = sns.catplot(data= df2, y='Age', kind='box',color = sns.color_palette()[5])\n",
        "# Setting title for better clarity\n",
        "fx.set(title='Age Box Plot')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 543
        },
        "id": "HTEch1axd3S1",
        "outputId": "d53ae004-412f-44be-bfbe-780ecf4c6aa5"
      },
      "execution_count": 125,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8a8d0f6d0>"
            ]
          },
          "metadata": {},
          "execution_count": 125
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Box plot\n",
        "sns.boxplot(x='Outcome', y='Insulin', data=df2)\n",
        "\n",
        "# Set labels and title\n",
        "plt.xlabel('Diabetes Outcome')\n",
        "plt.ylabel('Insulin')\n",
        "plt.title('Insulin Levels by Diabetes Outcome')\n",
        "\n",
        "# Show the plot\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "y5kJvES4aSQd",
        "outputId": "0bd16b57-6a37-4fe0-c3a9-ee90b757f8c6"
      },
      "execution_count": 126,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The distribution is skewed to the left (younger ages), meaning that there are more people diagnosed with diabetes at younger ages than at older ages. This may be because of the following factors:\n",
        "\n",
        "- **Type 1 diabetes:** Type 1 diabetes is an autoimmune disease that typically develops in childhood or adolescence. It is caused by the body's immune system attacking the cells in the pancreas that produce insulin.\n",
        "- **Childhood obesity:** Childhood obesity is a major risk factor for developing type 2 diabetes. Obese children are more likely to develop insulin resistance, which can lead to type 2 diabetes.\n",
        "- **Gestational diabetes:** Gestational diabetes is a type of diabetes that can develop during pregnancy. It usually goes away after childbirth, but women who have had gestational diabetes are at an increased risk of developing type 2 diabetes later in life."
      ],
      "metadata": {
        "id": "75e3njgQa2rH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a KDE plot for the 'Bmi' variable\n",
        "fx = sns.displot(data=df2, x='Bmi', kind='kde', fill=True)\n",
        "\n",
        "# Set the title and axis labels\n",
        "fx.fig.suptitle('BMI KDE Plot', y=1.02)\n",
        "fx.set(xlabel='BMI', ylabel='Density')\n",
        "\n",
        "# Show the plot\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 532
        },
        "id": "8aYqgSVHeLiM",
        "outputId": "64065fac-804f-4bba-a62b-3d7aed7bc4e9"
      },
      "execution_count": 127,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a box plot of the 'Bmi' column using Seaborn catplot\n",
        "fx= sns.catplot(data= df2, y='Bmi', color=sns.color_palette()[9], kind='box')\n",
        "# Setting title for better clarity\n",
        "fx.set(title='BMI Box Plot')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 546
        },
        "id": "O43tHpuneaUi",
        "outputId": "c2f9a32b-e2d4-4b2f-d8bd-1409e981065d"
      },
      "execution_count": 128,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8b0b45150>"
            ]
          },
          "metadata": {},
          "execution_count": 128
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Counting the occurrences of each unique value in the 'Bmi' column\n",
        "df2['Bmi'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Fx9QjWtvegw-",
        "outputId": "b256b802-50fc-40f7-be21-5fe9d088b509"
      },
      "execution_count": 129,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "24.2    2406\n",
              "22.6    1575\n",
              "23.0    1560\n",
              "19.3    1560\n",
              "20.1    1514\n",
              "20.3    1494\n",
              "24.9    1246\n",
              "30.6    1240\n",
              "29.5     846\n",
              "21.0     839\n",
              "30.0     839\n",
              "30.4     831\n",
              "22.9     806\n",
              "20.9     797\n",
              "24.3     788\n",
              "28.3     787\n",
              "29.0     787\n",
              "18.6     780\n",
              "20.2     750\n",
              "28.2     749\n",
              "28.7     721\n",
              "23.5     703\n",
              "32.4     687\n",
              "27.0     675\n",
              "21.2     524\n",
              "27.7     468\n",
              "24.1     422\n",
              "27.5     309\n",
              "31.0     102\n",
              "38.2      42\n",
              "32.3      19\n",
              "35.3      14\n",
              "Name: Bmi, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 129
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Sampling 50 random rows from the DataFrame where 'Bmi' is equal to 24.2\n",
        "df2.query('Bmi == 24.2').sample(50)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Re7dfOB7f2y0",
        "outputId": "c79fa58d-4c0e-4628-d552-fdd4dd88e18f"
      },
      "execution_count": 130,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Age  Sex   Bmi    Bp   S1     S2    S3   S4      S5  Glucose  ...  \\\n",
              "22977   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22489   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22967   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "13788   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "22143   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22741   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21955   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21976   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "13904   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "22349   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22186   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22427   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "13684   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "21805   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "13649   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "21425   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22016   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21820   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21434   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22987   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "23064   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21834   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22551   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "13683   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "13605   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "13944   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "22951   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22781   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21697   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22162   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22305   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21516   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22540   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22905   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22073   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22422   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22585   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "13499   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "22788   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "13753   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "22473   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22965   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "22954   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "13716   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "21443   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "14088   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "21798   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21812   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "14157   54    0  24.2  74.0  204  109.0  82.0  2.0  4.1744      109  ...   \n",
              "22900   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "\n",
              "       Insulin  bmi_y  Diabetespedigreefunction  Outcome  hypertension  \\\n",
              "22977      115   36.9                     0.471        0             0   \n",
              "22489      115   36.9                     0.471        0             0   \n",
              "22967      115   36.9                     0.471        0             0   \n",
              "13788        0   42.7                     0.845        0             0   \n",
              "22143        0   37.2                     0.267        0             0   \n",
              "22741      115   36.9                     0.471        0             0   \n",
              "21955        0   37.2                     0.267        0             0   \n",
              "21976        0   37.2                     0.267        0             0   \n",
              "13904        0   42.7                     0.845        0             1   \n",
              "22349      115   36.9                     0.471        0             0   \n",
              "22186        0   37.2                     0.267        0             0   \n",
              "22427      115   36.9                     0.471        0             0   \n",
              "13684        0   42.7                     0.845        0             0   \n",
              "21805        0   37.2                     0.267        0             0   \n",
              "13649        0   42.7                     0.845        0             1   \n",
              "21425        0   37.2                     0.267        0             0   \n",
              "22016        0   37.2                     0.267        0             0   \n",
              "21820        0   37.2                     0.267        0             0   \n",
              "21434        0   37.2                     0.267        0             0   \n",
              "22987      115   36.9                     0.471        0             0   \n",
              "23064      115   36.9                     0.471        0             0   \n",
              "21834        0   37.2                     0.267        0             0   \n",
              "22551      115   36.9                     0.471        0             0   \n",
              "13683        0   42.7                     0.845        0             0   \n",
              "13605        0   42.7                     0.845        0             0   \n",
              "13944        0   42.7                     0.845        0             0   \n",
              "22951      115   36.9                     0.471        0             0   \n",
              "22781      115   36.9                     0.471        0             0   \n",
              "21697        0   37.2                     0.267        0             1   \n",
              "22162        0   37.2                     0.267        0             0   \n",
              "22305      115   36.9                     0.471        0             0   \n",
              "21516        0   37.2                     0.267        0             0   \n",
              "22540      115   36.9                     0.471        0             0   \n",
              "22905      115   36.9                     0.471        0             0   \n",
              "22073        0   37.2                     0.267        0             0   \n",
              "22422      115   36.9                     0.471        0             0   \n",
              "22585      115   36.9                     0.471        0             0   \n",
              "13499        0   42.7                     0.845        0             0   \n",
              "22788      115   36.9                     0.471        0             0   \n",
              "13753        0   42.7                     0.845        0             0   \n",
              "22473      115   36.9                     0.471        0             0   \n",
              "22965      115   36.9                     0.471        0             0   \n",
              "22954      115   36.9                     0.471        0             0   \n",
              "13716        0   42.7                     0.845        0             0   \n",
              "21443        0   37.2                     0.267        0             0   \n",
              "14088        0   42.7                     0.845        0             0   \n",
              "21798        0   37.2                     0.267        0             0   \n",
              "21812        0   37.2                     0.267        0             0   \n",
              "14157        0   42.7                     0.845        0             0   \n",
              "22900      115   36.9                     0.471        0             0   \n",
              "\n",
              "       heart_disease  smoking_history  bmi_x  Hba1c_level  glucose  \n",
              "22977              0            never  33.17          4.0      159  \n",
              "22489              0            never  25.15          6.5       80  \n",
              "22967              0             ever  27.32          6.6      159  \n",
              "13788              0          No Info  46.10          4.5       85  \n",
              "22143              0            never  29.52          3.5      160  \n",
              "22741              0          No Info  51.19          6.0      160  \n",
              "21955              0          current  26.66          4.0      130  \n",
              "21976              0          No Info  26.77          5.8      155  \n",
              "13904              0             ever  27.32          6.6       80  \n",
              "22349              0          No Info  27.32          3.5      159  \n",
              "22186              0          No Info  27.32          6.5      160  \n",
              "22427              0            never  32.60          4.8      159  \n",
              "13684              0            never  27.65          5.0       90  \n",
              "21805              0            never  22.15          6.2      200  \n",
              "13649              0          No Info  27.32          6.1      100  \n",
              "21425              0          No Info  27.32          6.5      159  \n",
              "22016              0            never  28.15          4.8      140  \n",
              "21820              0             ever  44.40          6.6      200  \n",
              "21434              0           former  25.48          6.1      159  \n",
              "22987              0            never  29.16          6.6      126  \n",
              "23064              0            never  33.94          6.6       80  \n",
              "21834              0            never  23.24          6.5      130  \n",
              "22551              0          No Info  27.32          4.0      200  \n",
              "13683              0          No Info  27.32          5.8      155  \n",
              "13605              0            never  28.98          5.8       85  \n",
              "13944              0      not current  32.21          6.6      160  \n",
              "22951              0            never  33.44          3.5      140  \n",
              "22781              0            never  27.32          5.7      140  \n",
              "21697              0            never  45.83          6.6      200  \n",
              "22162              0            never  31.90          5.0      140  \n",
              "22305              0          No Info  25.23          6.6      126  \n",
              "21516              0          current  27.32          4.5      159  \n",
              "22540              0            never  27.32          4.5      158  \n",
              "22905              0            never  30.91          5.0      140  \n",
              "22073              0          No Info  27.32          6.2      145  \n",
              "22422              0            never  25.30          6.0       90  \n",
              "22585              0          current  24.12          5.0       90  \n",
              "13499              0             ever  36.74          6.0      100  \n",
              "22788              0            never  25.97          6.1       85  \n",
              "13753              1            never  22.92          5.7       85  \n",
              "22473              0            never  18.79          6.5      158  \n",
              "22965              0            never  21.83          5.0      159  \n",
              "22954              0            never  33.89          5.0      200  \n",
              "13716              0          No Info  28.12          6.6      200  \n",
              "21443              0          No Info  28.35          4.8      140  \n",
              "14088              0            never  30.18          6.5      140  \n",
              "21798              0      not current  27.32          3.5      145  \n",
              "21812              0          No Info  20.62          4.8       90  \n",
              "14157              0          current  24.20          6.2      100  \n",
              "22900              0          No Info  27.32          6.1      158  \n",
              "\n",
              "[50 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-93bc4f4c-5e5a-43b4-a9bc-c36ff6429ffd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Bmi</th>\n",
              "      <th>Bp</th>\n",
              "      <th>S1</th>\n",
              "      <th>S2</th>\n",
              "      <th>S3</th>\n",
              "      <th>S4</th>\n",
              "      <th>S5</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>...</th>\n",
              "      <th>Insulin</th>\n",
              "      <th>bmi_y</th>\n",
              "      <th>Diabetespedigreefunction</th>\n",
              "      <th>Outcome</th>\n",
              "      <th>hypertension</th>\n",
              "      <th>heart_disease</th>\n",
              "      <th>smoking_history</th>\n",
              "      <th>bmi_x</th>\n",
              "      <th>Hba1c_level</th>\n",
              "      <th>glucose</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>22977</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>33.17</td>\n",
              "      <td>4.0</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22489</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>25.15</td>\n",
              "      <td>6.5</td>\n",
              "      <td>80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22967</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>ever</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.6</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13788</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>46.10</td>\n",
              "      <td>4.5</td>\n",
              "      <td>85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22143</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>29.52</td>\n",
              "      <td>3.5</td>\n",
              "      <td>160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22741</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>51.19</td>\n",
              "      <td>6.0</td>\n",
              "      <td>160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21955</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>current</td>\n",
              "      <td>26.66</td>\n",
              "      <td>4.0</td>\n",
              "      <td>130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21976</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>26.77</td>\n",
              "      <td>5.8</td>\n",
              "      <td>155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13904</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>ever</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.6</td>\n",
              "      <td>80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22349</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>3.5</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22186</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.5</td>\n",
              "      <td>160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22427</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>32.60</td>\n",
              "      <td>4.8</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13684</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>27.65</td>\n",
              "      <td>5.0</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21805</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>22.15</td>\n",
              "      <td>6.2</td>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13649</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.1</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21425</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.5</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22016</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>28.15</td>\n",
              "      <td>4.8</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21820</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>ever</td>\n",
              "      <td>44.40</td>\n",
              "      <td>6.6</td>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21434</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>former</td>\n",
              "      <td>25.48</td>\n",
              "      <td>6.1</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22987</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>29.16</td>\n",
              "      <td>6.6</td>\n",
              "      <td>126</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23064</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>33.94</td>\n",
              "      <td>6.6</td>\n",
              "      <td>80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21834</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>23.24</td>\n",
              "      <td>6.5</td>\n",
              "      <td>130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22551</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>4.0</td>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13683</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>5.8</td>\n",
              "      <td>155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13605</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>28.98</td>\n",
              "      <td>5.8</td>\n",
              "      <td>85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13944</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>not current</td>\n",
              "      <td>32.21</td>\n",
              "      <td>6.6</td>\n",
              "      <td>160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22951</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>33.44</td>\n",
              "      <td>3.5</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22781</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>27.32</td>\n",
              "      <td>5.7</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21697</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>45.83</td>\n",
              "      <td>6.6</td>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22162</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>31.90</td>\n",
              "      <td>5.0</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22305</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>25.23</td>\n",
              "      <td>6.6</td>\n",
              "      <td>126</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21516</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>current</td>\n",
              "      <td>27.32</td>\n",
              "      <td>4.5</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22540</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>27.32</td>\n",
              "      <td>4.5</td>\n",
              "      <td>158</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22905</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>30.91</td>\n",
              "      <td>5.0</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22073</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.2</td>\n",
              "      <td>145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22422</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>25.30</td>\n",
              "      <td>6.0</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22585</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>current</td>\n",
              "      <td>24.12</td>\n",
              "      <td>5.0</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13499</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>ever</td>\n",
              "      <td>36.74</td>\n",
              "      <td>6.0</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22788</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>25.97</td>\n",
              "      <td>6.1</td>\n",
              "      <td>85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13753</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>never</td>\n",
              "      <td>22.92</td>\n",
              "      <td>5.7</td>\n",
              "      <td>85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22473</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>18.79</td>\n",
              "      <td>6.5</td>\n",
              "      <td>158</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22965</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>21.83</td>\n",
              "      <td>5.0</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22954</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>33.89</td>\n",
              "      <td>5.0</td>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13716</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>28.12</td>\n",
              "      <td>6.6</td>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21443</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>28.35</td>\n",
              "      <td>4.8</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14088</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>30.18</td>\n",
              "      <td>6.5</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21798</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>not current</td>\n",
              "      <td>27.32</td>\n",
              "      <td>3.5</td>\n",
              "      <td>145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21812</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>20.62</td>\n",
              "      <td>4.8</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14157</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>74.0</td>\n",
              "      <td>204</td>\n",
              "      <td>109.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.1744</td>\n",
              "      <td>109</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>42.7</td>\n",
              "      <td>0.845</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>current</td>\n",
              "      <td>24.20</td>\n",
              "      <td>6.2</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22900</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.1</td>\n",
              "      <td>158</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93bc4f4c-5e5a-43b4-a9bc-c36ff6429ffd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-93bc4f4c-5e5a-43b4-a9bc-c36ff6429ffd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-93bc4f4c-5e5a-43b4-a9bc-c36ff6429ffd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5db16fa8-53c6-4568-95cc-af0e50a78811\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5db16fa8-53c6-4568-95cc-af0e50a78811')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5db16fa8-53c6-4568-95cc-af0e50a78811 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 130
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Filtering rows where 'Age' is less than 29 and 'Bmi' is equal to 24.2\n",
        "df2.query('Age < 29 and Bmi == 24.2')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 443
        },
        "id": "6yJZ1y9dgS1L",
        "outputId": "706b1fbf-7f55-4a41-9950-f8f839e3b13d"
      },
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Age  Sex   Bmi    Bp   S1     S2    S3   S4      S5  Glucose  ...  \\\n",
              "21414   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21415   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21416   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21417   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "21418   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "...    ...  ...   ...   ...  ...    ...   ...  ...     ...      ...  ...   \n",
              "23071   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "23072   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "23073   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "23074   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "23075   28    0  24.2  93.0  174  106.4  54.0  3.0  4.2195       84  ...   \n",
              "\n",
              "       Insulin  bmi_y  Diabetespedigreefunction  Outcome  hypertension  \\\n",
              "21414        0   37.2                     0.267        0             0   \n",
              "21415        0   37.2                     0.267        0             0   \n",
              "21416        0   37.2                     0.267        0             0   \n",
              "21417        0   37.2                     0.267        0             0   \n",
              "21418        0   37.2                     0.267        0             0   \n",
              "...        ...    ...                       ...      ...           ...   \n",
              "23071      115   36.9                     0.471        0             0   \n",
              "23072      115   36.9                     0.471        0             0   \n",
              "23073      115   36.9                     0.471        0             0   \n",
              "23074      115   36.9                     0.471        0             0   \n",
              "23075      115   36.9                     0.471        0             0   \n",
              "\n",
              "       heart_disease  smoking_history  bmi_x  Hba1c_level  glucose  \n",
              "21414              0      not current  26.79          5.8      200  \n",
              "21415              0            never  20.95          6.2       80  \n",
              "21416              0          No Info  27.32          6.2      100  \n",
              "21417              0            never  26.17          6.6      145  \n",
              "21418              0          No Info  27.32          6.2      126  \n",
              "...              ...              ...    ...          ...      ...  \n",
              "23071              0            never  26.21          6.6      200  \n",
              "23072              0            never  27.32          4.0      155  \n",
              "23073              0          current  21.95          6.5      158  \n",
              "23074              0            never  20.77          6.2      155  \n",
              "23075              0            never  24.36          5.8      159  \n",
              "\n",
              "[1662 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ec9e9ddf-64b8-48bd-b125-8ea262b79bc2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Bmi</th>\n",
              "      <th>Bp</th>\n",
              "      <th>S1</th>\n",
              "      <th>S2</th>\n",
              "      <th>S3</th>\n",
              "      <th>S4</th>\n",
              "      <th>S5</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>...</th>\n",
              "      <th>Insulin</th>\n",
              "      <th>bmi_y</th>\n",
              "      <th>Diabetespedigreefunction</th>\n",
              "      <th>Outcome</th>\n",
              "      <th>hypertension</th>\n",
              "      <th>heart_disease</th>\n",
              "      <th>smoking_history</th>\n",
              "      <th>bmi_x</th>\n",
              "      <th>Hba1c_level</th>\n",
              "      <th>glucose</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>21414</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>not current</td>\n",
              "      <td>26.79</td>\n",
              "      <td>5.8</td>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21415</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>20.95</td>\n",
              "      <td>6.2</td>\n",
              "      <td>80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21416</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.2</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21417</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>26.17</td>\n",
              "      <td>6.6</td>\n",
              "      <td>145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21418</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>37.2</td>\n",
              "      <td>0.267</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>No Info</td>\n",
              "      <td>27.32</td>\n",
              "      <td>6.2</td>\n",
              "      <td>126</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23071</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>26.21</td>\n",
              "      <td>6.6</td>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23072</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>27.32</td>\n",
              "      <td>4.0</td>\n",
              "      <td>155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23073</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>current</td>\n",
              "      <td>21.95</td>\n",
              "      <td>6.5</td>\n",
              "      <td>158</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23074</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>20.77</td>\n",
              "      <td>6.2</td>\n",
              "      <td>155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23075</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>93.0</td>\n",
              "      <td>174</td>\n",
              "      <td>106.4</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.2195</td>\n",
              "      <td>84</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>36.9</td>\n",
              "      <td>0.471</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>never</td>\n",
              "      <td>24.36</td>\n",
              "      <td>5.8</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1662 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec9e9ddf-64b8-48bd-b125-8ea262b79bc2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ec9e9ddf-64b8-48bd-b125-8ea262b79bc2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ec9e9ddf-64b8-48bd-b125-8ea262b79bc2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3ae6794b-6f26-4907-889b-d2abc4cc2bbd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3ae6794b-6f26-4907-889b-d2abc4cc2bbd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3ae6794b-6f26-4907-889b-d2abc4cc2bbd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 131
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "After conducting a thorough analysis of the 'BMI' and 'Age' columns, several key observations and conclusions can be drawn. Firstly, it's noteworthy that no missing values were identified in either of the columns, indicating a completeness of data in these aspects.\n",
        "\n",
        "Upon investigating the distribution of values, it was observed that there are no significant outliers in either 'BMI' or 'Age,' suggesting a relatively homogeneous dataset. This is important as outliers can sometimes distort the analysis, and their absence contributes to the reliability of the findings.\n",
        "\n",
        "The distribution of 'BMI' revealed a slight left skewness, indicating that a larger proportion of individuals tend to have slightly lower BMI values. However, it's crucial to note that this skewness is not extreme, suggesting a relatively balanced distribution.\n",
        "\n",
        "A notable concentration of individuals with a 'BMI' of approximately 24.2 was observed. This could indicate a common value or a specific range that is more prevalent in the dataset. Further exploration may be needed to understand the significance of this particular value.\n",
        "\n",
        "Upon delving into the relationship between 'BMI' and 'Age,' a pattern emerged where many individuals with a 'BMI' of 24.2 were younger than 29. This correlation may imply that this specific 'BMI' range is more common among younger age groups.\n",
        "\n",
        "Lastly, it's worth mentioning that the analysis hints at a concentration of individuals within the normal BMI range, typically defined between 24 to 29. This observation aligns with standard health guidelines, further emphasizing the importance of maintaining a healthy BMI for overall well-being."
      ],
      "metadata": {
        "id": "f8YRAh01ivvT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a KDE (Kernel Density Estimate) plot and rug plot for the 'Hba1c_level' column using Seaborn displot\n",
        "fx = sns.displot(data= df2, x='Hba1c_level', color = sns.color_palette()[9], kind='kde', fill=True)\n",
        "# Adding a rug plot for data point visualization\n",
        "sns.rugplot(data= df2, x='Hba1c_level', color = sns.color_palette()[1])\n",
        "# Setting title for better clarity\n",
        "fx.set(title='hbA1c Level KDE Plot + Rug Plot')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 546
        },
        "id": "jgoeggJwhnfa",
        "outputId": "e762e3a0-bc62-4df1-c0d0-674306d0aec8"
      },
      "execution_count": 132,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8a8779900>"
            ]
          },
          "metadata": {},
          "execution_count": 132
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculating the percentage distribution of each unique value in the 'Hba1c_level' column\n",
        "df2['Hba1c_level'].value_counts(normalize=True)*100"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oHlDibNviZPU",
        "outputId": "908522e2-9b01-4507-df0c-99151fb84771"
      },
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4.5    8.653274\n",
              "5.7    8.560268\n",
              "3.5    8.526786\n",
              "5.0    8.511905\n",
              "6.0    8.500744\n",
              "6.6    8.303571\n",
              "6.5    8.251488\n",
              "4.8    8.244048\n",
              "5.8    8.162202\n",
              "4.0    8.151042\n",
              "6.2    8.039435\n",
              "6.1    7.749256\n",
              "6.8    0.089286\n",
              "9.0    0.074405\n",
              "8.2    0.066964\n",
              "7.5    0.048363\n",
              "8.8    0.037202\n",
              "7.0    0.029762\n",
              "Name: Hba1c_level, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 133
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a box plot for the 'Hba1c_level' column using Seaborn catplot\n",
        "sns.catplot(kind='box', data= df2, y='Hba1c_level')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 523
        },
        "id": "DXn_Iy89ieL3",
        "outputId": "1395e6ae-aa10-45ed-a7c4-7087a35dece4"
      },
      "execution_count": 134,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8a3f587c0>"
            ]
          },
          "metadata": {},
          "execution_count": 134
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The 'Hba1c_level' values are categorical or discrete rather than continuous.\n",
        "\n",
        "The box plot reveals the existence of some outliers in the distribution of 'Hba1c_level.'\n",
        "\n",
        "The rug plot is a simple way to visualize the distribution of the data points. It is simply a scatter plot with the x-axis suppressed. The rug plot shows the relative frequency of each data point.\n",
        "\n",
        "The KDE plot shows that the distribution of HbA1c levels is skewed to the right, with a peak at around 5.6 and 6.5. This means that there are more people with HbA1c levels above 5.5 than there are people with HbA1c levels below 5.5.\n",
        "\n",
        "The rug plot shows that the vast majority of people in the data set have HbA1c levels between 5 and 6.6. This is considered to be the healthy range for HbA1c levels.\n",
        "\n",
        "Overall, the rug plot and KDE plot indicate that the data set's distribution of HbA1c levels is generally in good health. Nonetheless, a subset of individuals with HbA1c values less than 5 are classified as pre-diabetic or diabetic."
      ],
      "metadata": {
        "id": "-7hcqkpQij0y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a KDE (Kernel Density Estimate) plot for the 'Age' column with hue based on 'Outcome' using Seaborn displot\n",
        "sns.displot(kind='kde', data= df2, x='Age', hue= 'Outcome', fill=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "H95wH4c_sD3w",
        "outputId": "6302eac0-27b1-429d-80eb-91ca2e544da0"
      },
      "execution_count": 135,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8a3f2b910>"
            ]
          },
          "metadata": {},
          "execution_count": 135
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 574.361x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a box plot for the 'Age' column with hue based on 'Outcome'\n",
        "fx = sns.catplot(kind='box', data= df2, x= 'Outcome', y='Age',hue= 'Outcome')\n",
        "# Setting custom x-axis tick labels for better clarity\n",
        "fx.set_xticklabels(['No Diabetes', 'Diabetes'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "77acotTytQM5",
        "outputId": "7ea9b342-0a1e-4980-ae48-f28f51f02967"
      },
      "execution_count": 136,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8aa914d00>"
            ]
          },
          "metadata": {},
          "execution_count": 136
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The graph shows that the prevalence of diabetes increases with age. This is because the risk factors for developing diabetes, such as obesity and insulin resistance, are more common in older adults.\n",
        "\n",
        "The graph also shows that the prevalence of diabetes peaks at around age 60 and then declines slightly. This is likely due to a combination of factors, such as older adults being more likely to have access to healthcare and being more likely to manage their diabetes effectively."
      ],
      "metadata": {
        "id": "boGLsgkBt20B"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df2['Sex'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zOpA4vtKvSOm",
        "outputId": "f55f4d34-ad0d-4b16-fea3-8ed8435e8960"
      },
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1])"
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a cross-tabulation (contingency table) of 'Sex' and 'Outcome' columns\n",
        "temp_df = pd.crosstab(df2['Sex'], df2['Outcome'], normalize='columns')*100\n"
      ],
      "metadata": {
        "id": "d5BQke9LuVDi"
      },
      "execution_count": 138,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a heatmap for the cross-tabulation\n",
        "sns.heatmap(temp_df, annot=True, cmap='summer')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "D6xVACQVufIN",
        "outputId": "fe0a526e-36b9-414c-dc03-43be3a5dd820"
      },
      "execution_count": 139,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Outcome', ylabel='Sex'>"
            ]
          },
          "metadata": {},
          "execution_count": 139
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(df2[df2['Sex'] == 0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LUuZ7ESuwo1D",
        "outputId": "8c303d98-d321-4ec7-d01c-c591c661004a"
      },
      "execution_count": 140,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "21805"
            ]
          },
          "metadata": {},
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(df2[df2['Sex'] == 1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vi4ywpphw2gD",
        "outputId": "d5c0354f-e62d-4f97-a61e-c758b7b03720"
      },
      "execution_count": 141,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5075"
            ]
          },
          "metadata": {},
          "execution_count": 141
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(21805 - 5075)/len(df2)*100"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tXIkpOmtxEAz",
        "outputId": "be502027-7dd3-4b1c-e9a7-3e7501f99592"
      },
      "execution_count": 142,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "62.239583333333336"
            ]
          },
          "metadata": {},
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "- Diabetes affects both genders equally\n",
        "- The heatmap shows that the prevalence of diabetes is slightly higher in women than in men. However, it is important to note that the dataset is biased towards women, with 62% more female data than male data. This means that the heatmap is not a completely accurate representation of the distribution of diabetes by gender in the general population."
      ],
      "metadata": {
        "id": "quwLXmD8xQpQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a bar plot for the 'Bmi' column with x-axis based on 'Outcome'\n",
        "fx = sns.barplot(data= df2, x='Outcome', y='Bmi')\n",
        "# Setting custom x-axis tick labels for better clarity\n",
        "fx.set(title='Diabetes vs BMI')\n",
        "# Setting title for the plot\n",
        "fx.set_xticklabels(['No Diabetes', 'Diabetes'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "eThbpkodxhA5",
        "outputId": "ab283b4e-7ac0-46aa-e905-6445b9d123f2"
      },
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0, 'No Diabetes'), Text(1, 0, 'Diabetes')]"
            ]
          },
          "metadata": {},
          "execution_count": 143
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a box plot for the 'Bmi' column with x-axis based on 'Outcome'\n",
        "fx = sns.catplot(data= df2, x='Outcome', y='Bmi', kind='box')\n",
        "# Setting custom x-axis tick labels for better clarity\n",
        "fx.set(title='Diabetes vs BMI')\n",
        "# Setting title for the plot\n",
        "fx.set_xticklabels(['No Diabetes', 'Diabetes'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 546
        },
        "id": "P3SaBxYWynaY",
        "outputId": "5747f38d-260b-4014-eb0e-f65a27a35d2b"
      },
      "execution_count": 144,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8a361fe50>"
            ]
          },
          "metadata": {},
          "execution_count": 144
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The boxplot shows that the median BMI is higher in people with diabetes than in people without diabetes. This means that people with diabetes are more likely to be overweight or obese than people without diabetes.\n",
        "\n",
        "There are a few possible explanations for this relationship. One possibility is that people with diabetes are more likely to gain weight because of their insulin resistance. Insulin resistance is a condition in which the body's cells do not respond properly to insulin. This can lead to high blood sugar levels and weight gain.\n",
        "\n",
        "Another possibility is that people with diabetes are more likely to be overweight or obese because of their lifestyle choices. For example, people with diabetes may be more likely to eat unhealthy foods or to be less active physically."
      ],
      "metadata": {
        "id": "ZKbS6uTGy4qc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a bar plot for the 'Hba1c_level' column with x-axis based on 'Outcome'\n",
        "fx = sns.barplot(data= df2, x= 'Outcome', y= 'Hba1c_level')\n",
        "# Setting custom x-axis tick labels for better clarity\n",
        "fx.set(title='Diabetes vs HbA1c Level')\n",
        "# Setting title for the plot\n",
        "fx.set_xticklabels(['No Diabetes', 'Diabetes'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "LGDSqf3HzC_Q",
        "outputId": "4c8af46f-9b9e-43c0-ea9d-8eb63d8d293c"
      },
      "execution_count": 145,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0, 'No Diabetes'), Text(1, 0, 'Diabetes')]"
            ]
          },
          "metadata": {},
          "execution_count": 145
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a box plot for the 'Hba1c_level' column with x-axis based on 'Outcome'\n",
        "fx = sns.catplot(data= df2, x='Outcome', y= 'Hba1c_level', kind='box')\n",
        "# Setting custom x-axis tick labels for better clarity and Setting title\n",
        "fx.set(title='Diabetes vs HbA1c Level')\n",
        "fx.set_xticklabels(['No Diabetes', 'Diabetes'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 546
        },
        "id": "l_4Av29Kzbwu",
        "outputId": "77b76a70-f533-4cd0-ce1e-f615b570e589"
      },
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8a3e9a590>"
            ]
          },
          "metadata": {},
          "execution_count": 146
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The HbA1c test is a blood test that measures the average blood sugar level over the past 2-3 months. An HbA1c level of 6.5% or higher is considered to be diabetes.\n",
        "\n",
        "The boxplot shows that the median HbA1c level is higher in people with diabetes than in people without diabetes. The distribution of HbA1c levels is also wider in people with diabetes than in people without diabetes.\n",
        "\n",
        "Thus, we may conclude that the likelihood of developing diabetes rises with an increase in HbA1c levels."
      ],
      "metadata": {
        "id": "xjv_zCYBzuW-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a bar plot for the 'glucose' column with x-axis based on 'Outcome' using Seaborn barplot\n",
        "fx = sns.barplot(data= df2, x='Outcome', y='glucose')\n",
        "fx.set(title='Diabetes vs Blood Glucose Level')\n",
        "fx.set_xticklabels(['No Diabetes', 'Diabetes'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "kPr3rLxO4u1a",
        "outputId": "838d1ca5-0285-4fbf-d28d-4e91aaaf00b9"
      },
      "execution_count": 147,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0, 'No Diabetes'), Text(1, 0, 'Diabetes')]"
            ]
          },
          "metadata": {},
          "execution_count": 147
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a box plot for the 'glucose' column with x-axis based on 'Outcome' using Seaborn catplot\n",
        "fx = sns.catplot(data= df2, x='Outcome', y='glucose', kind='box')\n",
        "fx.set(title='Diabetes vs Blood Glucose Level')\n",
        "fx.set_xticklabels(['No Diabetes', 'Diabetes'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 546
        },
        "id": "YXPms49R6mFJ",
        "outputId": "29ce3166-cbc6-4394-ca11-8737405d1b89"
      },
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7dd8a3403700>"
            ]
          },
          "metadata": {},
          "execution_count": 148
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The blood glucose level is a measure of the amount of glucose in the blood. A blood glucose level of 160 mg/dL or higher after fasting for at least 8 hours is considered to be diabetes which is median of the box plot.\n",
        "\n",
        "The boxplot also shows that the distribution of blood glucose levels is wider in people with diabetes than in people without diabetes. This means that there is a greater range of blood glucose levels in people with diabetes."
      ],
      "metadata": {
        "id": "48E5grQe5zm2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.jointplot(data= df2, x='Bloodpressure', y='Age', hue='Outcome', kind='scatter')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 624
        },
        "id": "XaFsgjE47FvI",
        "outputId": "e32ea124-e531-4ed7-bea4-d07764b2fcca"
      },
      "execution_count": 149,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.JointGrid at 0x7dd8a33feb60>"
            ]
          },
          "metadata": {},
          "execution_count": 149
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pairplot_columns = ['hypertension', 'heart_disease', 'Pregnancies', 'Bloodpressure', 'Outcome']\n",
        "\n",
        "# Pair plot for selected columns\n",
        "sns.pairplot(data=df2[pairplot_columns], hue='Outcome', kind='scatter')\n",
        "plt.suptitle('Pair Plot of Variables with Outcome', y=1.02)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "zV1zCMSF_NbI",
        "outputId": "9cde29e5-ba68-418e-d1e1-a0812585fd90"
      },
      "execution_count": 150,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1074.36x1000 with 20 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a box plot for the 'Bloodpressure' column with x-axis based on 'Outcome'\n",
        "xx = sns.boxplot(x='Outcome', y='Bloodpressure', data=df2)\n",
        "xx.set_title('Distribution of Blood Pressure')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "u11CXYnVMTS2",
        "outputId": "3f99e07a-c166-4958-c521-92830c4126bc"
      },
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Distribution of Blood Pressure')"
            ]
          },
          "metadata": {},
          "execution_count": 151
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Hypertension and Diabetes:\n",
        "- There appears to be some positive correlation between hypertension and diabetes. Individuals with diabetes tend to have a slightly higher prevalence of hypertension. This observation aligns with existing medical knowledge, as hypertension is recognized as a common comorbidity with diabetes.\n",
        "\n",
        "Blood Pressure and Diabetes:\n",
        "- The analysis suggests that having diabetes may increase the likelihood of elevated blood pressure. This finding supports the idea that diabetes and hypertension are interconnected, and the presence of one condition can influence the occurrence of the other. This relationship underscores the importance of monitoring and managing blood pressure in individuals with diabetes.\n",
        "\n",
        "Heart Disease and Diabetes:\n",
        "- The pair plot indicates a potential association between heart disease and diabetes, but the correlation may not be as clear as with hypertension and blood pressure. It's important to note that heart disease is a complex condition influenced by various factors beyond diabetes.\n",
        "\n",
        "Pregnancies and Diabetes:\n",
        "- While there is a range of pregnancies for both diabetes and non-diabetes groups, the higher number of pregnancies tends to be more prevalent in individuals with diabetes. This aligns with the known association between gestational diabetes and the number of pregnancies."
      ],
      "metadata": {
        "id": "PM8mTRM53HuJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating a box plot for the 'Age' column with x-axis based on 'smoking_history' and hue based on 'Outcome'\n",
        "sns.boxplot(x='smoking_history', y='Age', hue='Outcome', data=df2, palette='Set3')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "2h5bfveOP5Xy",
        "outputId": "36e2b9bb-a5e0-4503-c401-a534f116867b"
      },
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='smoking_history', ylabel='Age'>"
            ]
          },
          "metadata": {},
          "execution_count": 152
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The boxplot shows that people who currently smoke are more likely to have diabetes than people who never smoked or who used to smoke(2nd and 3rd plot). This is because smoking increases the risk of developing diabetes in a number of ways."
      ],
      "metadata": {
        "id": "QY63xuEaAtVu"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Conclusion"
      ],
      "metadata": {
        "id": "CIDq6PwPA6LZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Age and Diabetes:**\n",
        "- Effect: Diabetes prevalence increases with age.\n",
        "- Health Tip: Regular health check-ups and lifestyle adjustments become crucial with advancing age to manage diabetes risk.\n",
        "\n",
        "**BMI and Diabetes:**\n",
        "- Effect: Higher BMI correlates with diabetes.\n",
        "- Health Tip: Maintain a healthy BMI through a balanced diet and regular exercise to reduce diabetes risk.\n",
        "\n",
        "**HbA1c Levels:**\n",
        "- Effect: Higher HbA1c levels indicate a likelihood of diabetes.\n",
        "- Health Tip: Monitor and manage HbA1c levels through a diabetes-friendly diet and medication adherence.\n",
        "\n",
        "**Blood Glucose Levels:**\n",
        "- Effect: Elevated levels are associated with diabetes.\n",
        "- Health Tip: Adopt a low-sugar diet and stay physically active to regulate blood glucose.\n",
        "\n",
        "**Hypertension, Blood Pressure, and Diabetes:**\n",
        "- Effect: Positive correlation; diabetes increases likelihood of hypertension.\n",
        "- Health Tip: Manage blood pressure through a heart-healthy lifestyle to mitigate diabetes risk.\n",
        "\n",
        "**Heart Disease and Diabetes:**\n",
        "- Effect: Potential association; requires further investigation.\n",
        "- Health Tip: Prioritize heart-healthy habits, such as regular exercise and a balanced diet, to reduce overall health risks.\n",
        "\n",
        "**Smoking and Diabetes:**\n",
        "- Effect: Current smokers show higher likelihood of diabetes.\n",
        "- Health Tip: Quit smoking and adopt a smoke-free lifestyle to promote overall health and reduce diabetes risk."
      ],
      "metadata": {
        "id": "OKpgwFuUA99o"
      }
    }
  ]
}